#	$Id: yMakefile,v 1.37 1993-10-19 17:45:33 boote Exp $
#
#	Makefile for libraster - libraries for dealing with
#	a variety of raster image formats.
#

# Build the Parallax video frame buffer driver only for local systems.

#if	defined(hostlonecone)	|| defined(hostgulebra) || \
	defined(hostsalida)	|| defined(hostsunlight)
#define BuildRasterParallax
#endif

#if	defined(BuildParallax)
#define BuildRasterParallax
#endif

#ifdef	BuildXlibDependentCode
#define	BuildRasterXWD
#endif	BuildXlibDependentCode

MYNAME		= libncarg_ras.a
INCLUDES	= ncarg_ras.h

#ifdef sgi
LOCLIB		= $(NCARGRASLIB) $(NCARGCLIB) -ldf $(NCDFLIBS) -lsun
#else
LOCLIB		= $(NCARGRASLIB) $(NCARGCLIB) -ldf
#endif

#ifdef BuildRasterHDF
HDF_OBJS =	hdf.o
HDF_SRCS =	hdf.c
HDF_DEFS = 	-DBuildRasterHDF $(HDFDEFINES)
#endif

#ifdef BuildRasterHPPCL
HPPCL_OBJS =	hppcl.o
HPPCL_SRCS =	hppcl.c
HPPCL_DEFS =	-DBuildRasterHPPCL
#endif

#ifdef BuildRasterNrif
NRIF_OBJS =	nrif.o
NRIF_SRCS =	nrif.c
NRIF_DEFS = 	-DBuildRasterNrif
#endif

#ifdef BuildRasterSun
SUN_OBJS =	sunraster.o
SUN_SRCS =	sunraster.c
SUN_DEFS = 	-DBuildRasterSun
#endif

#ifdef BuildRasterXWD
XWD_OBJS =	xwd.o
XWD_SRCS =	xwd.c
XWD_DEFS = 	-DBuildRasterXWD
#endif

#if defined (BuildRasterParallax) && defined(sun)
PARALLAX_OBJS =	parallax.o
PARALLAX_SRCS =	parallax.c
PARALLAX_DEFS =	-DBuildRasterParallax
#endif

#ifdef BuildRasterAVS
AVS_OBJS =	avsraster.o
AVS_SRCS =	avsraster.c
AVS_DEFS =	-DBuildRasterAVS
#endif

#ifdef BuildRasterSGI
SGI_OBJS =	sgiraster.o
SGI_SRCS =	sgiraster.c
SGI_DEFS =	-DBuildRasterSGI
#endif

#ifdef BuildRasterAbekas
ABEKAS_OBJS =	abekas.o
ABEKAS_SRCS =	abekas.c
ABEKAS_DEFS =	-DBuildRasterAbekas
#endif

#ifdef BuildRasterNetcdf
NETCDF_OBJS =	netcdf.o
NETCDF_SRCS =	netcdf.c
NETCDF_DEFS =	-DBuildRasterNetcdf
#endif

#ifdef BuildRasterBinary
BINARY_OBJS =	binary.o
BINARY_SRCS =	binary.c
BINARY_DEFS =	-DBuildRasterBinary
#endif

EXTRA_DEFINES =	$(HDF_DEFS) $(HPPCL_DEFS) $(NRIF_DEFS) $(SUN_DEFS) \
		$(XWD_DEFS) $(PARALLAX_DEFS) $(AVS_DEFS) $(SGI_DEFS) \
		$(ABEKAS_DEFS) $(NETCDF_DEFS) $(BINARY_DEFS)

DEVICE_OBJS =	$(HDF_OBJS) $(HPPCL_OBJS) $(NRIF_OBJS) $(SUN_OBJS) \
		$(XWD_OBJS) $(PARALLAX_OBJS) $(AVS_OBJS) $(SGI_OBJS) \
		$(ABEKAS_OBJS) $(NETCDF_OBJS) $(BINARY_OBJS)

DEVICE_SRCS =	$(HDF_SRCS) $(HPPCL_SRCS) $(NRIF_SRCS) $(SUN_SRCS) \
		$(XWD_SRCS) $(PARALLAX_SRCS) $(AVS_SRCS) $(SGI_SRCS) \
		$(ABEKAS_SRCS) $(NETCDF_SRCS) $(BINARY_SRCS)

GENERIC_OBJS =	raster.o cleartext.o error.o misc.o palette.o \
		dither.o resample.o composite.o ntsc.o color.o \
		rasterop.o generic.o memory.o $(DEVICE_OBJS)

GENERIC_SRCS =	raster.c cleartext.c error.c misc.c palette.c \
		dither.c resample.c composite.c ntsc.c color.c \
		rasterop.c generic.c memory.c $(DEVICE_SRCS)
			
OBJS		= $(GENERIC_OBJS)
SRCS		= $(GENERIC_SRCS)

LibraryTarget($(MYNAME),$(OBJS))
BuildIncludes($(INCLUDES),ncarg,..)
InstallTarget($(INCLUDES),$(INSTALL_INC),$(INCPATH))
DependTarget($(SRCS))

dither.o:	ncarg_ras.h
error.o:	ncarg_ras.h error.h
hdf.o:          ncarg_ras.h options.h Makefile
misc.o:		ncarg_ras.h
hdf.o:		ncarg_ras.h hdf.h
nrif.o:		ncarg_ras.h nrif.h
palette.o:	ncarg_ras.h
raster.o:	ncarg_ras.h raster.h options.h devices.h Makefile
sunraster.o:	ncarg_ras.h sunraster.h
xwd.o:		ncarg_ras.h

parallax.o:	ncarg_ras.h parallax.h
	cc $(CFLAGS) -c parallax.c

hppcl.o:	ncarg_ras.h hppcl.h
cleartext.o:	ncarg_ras.h
avsraster.o:	ncarg_ras.h avsraster.h
ntsc.o:		ncarg_ras.h ntsc.h
color.o:	ncarg_ras.h
sgiraster.o:	ncarg_ras.h sgiraster.h
binary.o:	ncarg_ras.h
abekas.o:	ncarg_ras.h abekas.h
netcdf.o:	ncarg_ras.h netcdflocal.h

rasls.o:	ncarg_ras.h
rascopy.o:	ncarg_ras.h

saber_src: $(SRCS)
	#setopt load_flags $(CFLAGS)
	#load $(SRCS) -ldf

saber_obj: $(OBJS)
	#setopt load_flags $(CFLAGS)
	#load $(OBJS) -ldf

test: rasls.o rascopy.o
	$(CC) $(CFLAGS) -o rasls rasls.o $(LOCLIB) -lmalloc
	$(CC) $(CFLAGS) -o rascopy rascopy.o $(LOCLIB) -lmalloc

lint:
	lint -I$(CINC) $(SRCS) 1> lint.out 2>&1
