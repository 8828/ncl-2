.\"
.\"	$Id: strmln.m,v 1.1.1.1 1992-04-17 22:30:31 ncargd Exp $
.\"
.TH STRMLN 3NCARG "MARCH 1988" NCAR "NCAR GRAPHICS"
.so MACRO_SOURCE
.dsNA " STRMLN - Draws a streamline representation of a flow field
.dsS1 " CALL EZSSTRM (U,V,WORK,IMAX,JMAX) if criteria below is met, else
.nrsN 1
.tr ~
.pn 379
.PH ""
.PF  ""
.SK 1
.po -.25i
.ll 6.5i
.PH ""
.EH "@\s9NCAR Graphics User's Guide\s11@@@"
.OH "@@@\s9STRMLN\s11@"
.EF "@\s\fB11%\s9\fR@@August 1987\s11@"
.OF "@\s9August 1987@@\s11\fB%\fR@"
.de hD          \" Heading macro level one
.br
.ne 5
.sp 2
.ps +3
.ft B           \" boldface, 14 pt.
\\$1
.ft R
.ps -3
.sp 
..
.de >>          \" display for indented lines
.in +.25i       \" usage: .>>
.sp
.nf
..              
.de <<          \" end of display for indented lines
.fi
.in -.25i       \" usage: .<<
.sp
..              
.de sf          \"start fortran (constant spacing)
.ps 10
.vs 12
.nf
.ft L
..
.de ef          \"end fortran (resume variable spacing & prev. size & font)
.ft
.fi
.ps
.vs
..
.br
.S 14
.S 11
SUBROUTINE STRMLN (U,V,WORK,IMAX,IPTSX,JPTSY,NSET,IER)
.R
.H 3 "Dimension of Arguments"
U(IMAX,JPTSY), V(IMAX,JPTSY),
WORK(2*IMAX*JPTSY)
.H 3 "Latest Revision"
August 1987
.H 3 "Purpose"
STRMLN draws a streamline representation of
the flow field. The representation is
independent of the flow speed.
.H 3 "Usage"
If the following assumptions are met, use

CALL EZSTRM  (U,V,WORK,IMAX,JMAX)

Assumptions:
.BL
.LI
The whole array is to be processed.
.LI
The arrays are dimensioned
U(IMAX,JMAX), V(IMAX,JMAX), and
WORK(2*IMAX*JMAX).
.LI
Window and viewport are to be chosen
by STRMLN.
.LI
PERIM is to be called.
.LE
.sp
If these assumptions are not met, use

CALL STRMLN (U,V,WORK,IMAX,IPTSX,JPTSY,
NSET,IER)

The user must call FRAME in the calling
routine.

The user may change various internal
parameters via common blocks. See below.
.H 3 "ARGUMENTS"
.H 3 "On Input"
.VL .6i
.LI "\fBU, V\fR"
Two dimensional arrays containing the
velocity fields to be plotted.
.sp
\fBNote:\fR  If the U and V components
are, for example, defined in Cartesian
coordinates and the user wishes to plot them
on a different projection (such as stereographic), then 
the appropriate
transformation must be made to the U and V
components via the functions FU and FV
(located in DRWSTR).
.LI "\fBWORK\fR"
User provided work array.  The dimension
of this array must be .GE. 2*IMAX*JPTSY.
.sp
\fBCaution:\fR  This routine does not check the
size of the work array.
.LI "\fBIMAX\fR"
The first dimension of U and V in the
calling program (X-direction).
.LI "\fBIPTSX\fR"
The number of points to be plotted in the
first subscript direction (X-direction).
.LI "\fBJPTSY\fR"
The number of points to be plotted in the
second subscript direction (Y-direction).
.LI "\fBNSET\fR"
Flag to control scaling
.br
>~0~~STRMLN assumes that the window
and viewport have been set by the
user in such a way as to properly
scale the plotting instructions
generated by STRMLN. PERIM is not
called.
.br
=~0~~STRMLN will establish the window and
viewport to properly scale the
plotting instructions to the standard
configuration. PERIM is called to draw
the border.
.br
<~0~~STRMLN establishes the window
and viewport so as to place the
streamlines within the limits
of the user's window.  PERIM is
not called.
.LE
.H 3 "On Output"
Only the IER argument may be changed. All
other arguments are unchanged.
.VL .6i
.LI "\fBIER\fR"
=~~0~when no errors are detected
.br
=~-1~when the routine is called with ICYC,
\&.NE. 0 and the data are not cyclic
(ICYC is an internal parameter
described below); in this case the
routine will draw the
streamlines with the non-cyclic
interpolation formulas.
.LE
.H 3 "Entry Points"
STRMLN, DRWSTR, EZSTRM, GNEWPT, CHKCYC
.H 3 "Common Blocks"
STR01, STR02, STR03, STR04
.H 3 "Required Library Routines"
GRIDAL, GBYTES, and the SPPS
.H 3 "Required GKS Level"
0A
.H 3 "I/O"
None                    
.H 3 "Precision"
Single
.H 3 "Language"
FORTRAN 77
.H 3 "History"
Written and standardized in November 1973.
Converted to FORTRAN 77 and GKS in June 1984.
.H 3 "Portability"
FORTRAN 77
.H 3 "Algorithm"
Wind components are normalized to the value
of DISPL. The least significant two
bits of the work array are
utilized as flags for each grid box. Flag 1
indicates whether any streamline has
previously passed through this box.  Flag 2
indicates whether a directional arrow has
already appeared in a box. Judicious use
of these flags prevents overcrowding of
streamlines and directional arrows.
Experience indicates that a final pleasing
picture is produced when streamlines are
initiated in the 
.ne 2
center of a grid box. The
streamlines are drawn in one direction then
in the opposite direction.
.H 3 "Reference"
The techniques utilized here are described
in an article by Thomas Whittaker (U. of
Wisconsin), which appeared in the notes and
correspondence section of \fIMonthly Weather
Review,\fR June 1977.
.H 3 "Timing"
Highly variable.
It depends on the complexity of the
flow field and the parameters:  DISPL,
DISPC, CSTOP, INITA, INITB, ITERC,
and IGFLG. (See below for a discussion
of these parameters.) If all values
are default, then a simple linear
flow field for a 40 x 40 grid will
take about 0.4 seconds on the CRAY1-A;
a fairly complex flow field will take about
1.5 seconds on the CRAY1-A.
.H 3 "Internal Parameters"
.TS
.if \n+(b.=1 .nr d. \n(.c-\n(c.-1
.de 35
.ps \n(.s
.vs \n(.vu
.in \n(.iu
.if \n(.u .fi
.if \n(.j .ad
.if \n(.j=0 .na
..
.nf
.nr #~ 0
.if n .nr #~ 0.6n
.ds #d .d
.if \(ts\n(.z\(ts\(ts .ds #d nl
.fc
.nr 33 \n(.s
.rm 80 81 82 83 84
.nr 34 \n(.lu
.eo
.am 82
.br
.di a+
.35
.ft \n(.f
.ll \n(34u*3u/6u
.if \n(.l<\n(82 .ll \n(82u
.in 0
Lengths of the sides of the
plot are proportional to
IPTSX and JPTSY except in
the case when MIN(IPTSX,JPT)
/ MAX(IPTSX,JPTSY) \&.LT. EXT;
in that case, a square
graph is plotted.
.br
.di
.nr a| \n(dn
.nr a- \n(dl
..
.ec \
.eo
.am 82
.br
.di b+
.35
.ft \n(.f
.ll \n(34u*3u/6u
.if \n(.l<\n(82 .ll \n(82u
.in 0
Length of longer edge of
plot. (See also EXT.)
.br
.di
.nr b| \n(dn
.nr b- \n(dl
..
.ec \
.eo
.am 82
.br
.di c+
.35
.ft \n(.f
.ll \n(34u*3u/6u
.if \n(.l<\n(82 .ll \n(82u
.in 0
Left hand edge of the plot.
.br
(0.0 = left edge of frame)
.br
(1.0 = right edge of frame)
.br
.di
.nr c| \n(dn
.nr c- \n(dl
..
.ec \
.eo
.am 82
.br
.di d+
.35
.ft \n(.f
.ll \n(34u*3u/6u
.if \n(.l<\n(82 .ll \n(82u
.in 0
Bottom edge of the plot.
.br
(0.0 = bottom; 1.0 = top)
.br
(YBT+SIDE and XLT+SIDE must
be .LE. 1.)
.br
.di
.nr d| \n(dn
.nr d- \n(dl
..
.ec \
.eo
.am 82
.br
.di e+
.35
.ft \n(.f
.ll \n(34u*3u/6u
.if \n(.l<\n(82 .ll \n(82u
.in 0
Used to precondition grid
boxes to be eligible to
start a streamline.
For example, a value of 4
means that every fourth
grid box is eligible; a
value of 2 means that every
other grid box is eligible
(see INITB).
.br
.di
.nr e| \n(dn
.nr e- \n(dl
..
.ec \
.eo
.am 82
.br
.di f+
.35
.ft \n(.f
.ll \n(34u*3u/6u
.if \n(.l<\n(82 .ll \n(82u
.in 0
Used to precondition grid
boxes to be eligible for
direction arrows.
If the user changes the
default values of INITA
and/or INITB, it should
be done such that
MOD(INITA,INITB) = 0.
For a dense grid try
.hw INITB
INITA=4 and INITB=2 to
reduce the CPU time.
.br
.di
.nr f| \n(dn
.nr f- \n(dl
..
.ec \
.eo
.am 82
.br
.di g+
.35
.ft \n(.f
.ll \n(34u*3u/6u
.if \n(.l<\n(82 .ll \n(82u
.in 0
Length of direction arrow.
For example, 0.33 means
each directional arrow will
take up a third of a grid
box.
.br
.di
.nr g| \n(dn
.nr g- \n(dl
..
.ec \
.eo
.am 82
.br
.di h+
.35
.ft \n(.f
.ll \n(34u*3u/6u
.if \n(.l<\n(82 .ll \n(82u
.in 0
Every 'ITERP' iterations
the streamline progress
is checked.
.br
.di
.nr h| \n(dn
.nr h- \n(dl
..
.ec \
.eo
.am 82
.br
.di i+
.35
.ft \n(.f
.ll \n(34u*3u/6u
.if \n(.l<\n(82 .ll \n(82u
.in 0
The default value of this
parameter is such that
it has no effect on the
code. When set to some
positive value, the program
will check for streamline
crossover every 'ITERC'
iterations. (The routine
currently does this every
time it enters a new grid
box.) 
.sp
\fBCaution:\fR  When
this parameter is activated
CPU time will increase.
.br
.di
.nr i| \n(dn
.nr i- \n(dl
..
.ec \
.eo
.am 82
.br
.di j+
.35
.ft \n(.f
.ll \n(34u*3u/6u
.if \n(.l<\n(82 .ll \n(82u
.in 0
A value of zero means that
the sixteen point Bessel
Interpolation Formula will
be utilized where possible;
when near the grid edges,
quadratic and bi-linear
interpolation  will be
used. This mixing of
interpolation schemes can
sometimes cause slight
raggedness near the edges
of the plot.  If IGFLG.NE.0,
then only the bilinear
interpolation formula
is used; this will generally
result in slightly faster
plot times but a less
pleasing plot.
.br
.di
.nr j| \n(dn
.nr j- \n(dl
..
.ec \
.eo
.am 82
.br
.di k+
.35
.ft \n(.f
.ll \n(34u*3u/6u
.if \n(.l<\n(82 .ll \n(82u
.in 0
If zero, then no missing
U and V components are
present.
If .NE. 0, STRMLN will
utilize the
bi-linear interpolation
scheme and terminate if
any data points are missing.
.br
.di
.nr k| \n(dn
.nr k- \n(dl
..
.ec \
.eo
.am 82
.br
.di l+
.35
.ft \n(.f
.ll \n(34u*3u/6u
.if \n(.l<\n(82 .ll \n(82u
.in 0
Value assigned to a missing
point.
.br
.di
.nr l| \n(dn
.nr l- \n(dl
..
.ec \
.eo
.am 82
.br
.di m+
.35
.ft \n(.f
.ll \n(34u*3u/6u
.if \n(.l<\n(82 .ll \n(82u
.in 0
Zero means the data are
non-cyclic in the X
direction.
If .NE 0, the
cyclic interpolation
formulas will be used.
.sp
\fBNote:\fR  Even if the data
are cyclic in X, leaving
ICYC = 0 will do no harm.
.br
.di
.nr m| \n(dn
.nr m- \n(dl
..
.ec \
.eo
.am 82
.br
.di n+
.35
.ft \n(.f
.ll \n(34u*3u/6u
.if \n(.l<\n(82 .ll \n(82u
.in 0
The wind speed is
normalized to this value.
(See the discussion below.)
.br
.di
.nr n| \n(dn
.nr n- \n(dl
..
.ec \
.eo
.am 82
.br
.di o+
.35
.ft \n(.f
.ll \n(34u*3u/6u
.if \n(.l<\n(82 .ll \n(82u
.in 0
The critical displacement.
If after 'ITERP' iterations
the streamline has not
moved this distance, the
streamline will be
terminated.
.br
.di
.nr o| \n(dn
.nr o- \n(dl
..
.ec \
.eo
.am 82
.br
.di p+
.35
.ft \n(.f
.ll \n(34u*3u/6u
.if \n(.l<\n(82 .ll \n(82u
.in 0
This parameter controls
the spacing between
streamlines.  The checking
is done when a new grid
box is entered.
.br
.di
.nr p| \n(dn
.nr p- \n(dl
..
.ec \
.35
.nf
.ll \n(34u
.nr 80 0
.nr 38 \wName
.if \n(80<\n(38 .nr 80 \n(38
.nr 38 \wEXT
.if \n(80<\n(38 .nr 80 \n(38
.nr 38 \wSIDE
.if \n(80<\n(38 .nr 80 \n(38
.nr 38 \wXLT
.if \n(80<\n(38 .nr 80 \n(38
.nr 38 \wYBT
.if \n(80<\n(38 .nr 80 \n(38
.nr 38 \wINITA
.if \n(80<\n(38 .nr 80 \n(38
.nr 38 \wINITB
.if \n(80<\n(38 .nr 80 \n(38
.nr 38 \wAROWL
.if \n(80<\n(38 .nr 80 \n(38
.nr 38 \wName
.if \n(80<\n(38 .nr 80 \n(38
.nr 38 \wITERP
.if \n(80<\n(38 .nr 80 \n(38
.nr 38 \wITERC
.if \n(80<\n(38 .nr 80 \n(38
.nr 38 \wIGFLG
.if \n(80<\n(38 .nr 80 \n(38
.nr 38 \wIMSG
.if \n(80<\n(38 .nr 80 \n(38
.nr 38 \wUVMSG
.if \n(80<\n(38 .nr 80 \n(38
.nr 38 \wICYC
.if \n(80<\n(38 .nr 80 \n(38
.nr 38 \wDISPL
.if \n(80<\n(38 .nr 80 \n(38
.nr 38 \wDISPC
.if \n(80<\n(38 .nr 80 \n(38
.nr 38 \wCSTOP
.if \n(80<\n(38 .nr 80 \n(38
.80
.rm 80
.nr 81 0
.nr 38 \wDefault
.if \n(81<\n(38 .nr 81 \n(38
.nr 31 0
.nr 32 0
.nr 38 \w0
.if \n(31<\n(38 .nr 31 \n(38
.nr 38 \w.25
.if \n(32<\n(38 .nr 32 \n(38
.nr 38 \w0
.if \n(31<\n(38 .nr 31 \n(38
.nr 38 \w.90
.if \n(32<\n(38 .nr 32 \n(38
.nr 38 \w0
.if \n(31<\n(38 .nr 31 \n(38
.nr 38 \w.05
.if \n(32<\n(38 .nr 32 \n(38
.nr 38 \w0
.if \n(31<\n(38 .nr 31 \n(38
.nr 38 \w.05
.if \n(32<\n(38 .nr 32 \n(38
.nr 38 \w2
.if \n(31<\n(38 .nr 31 \n(38
.nr 38 \w2
.if \n(31<\n(38 .nr 31 \n(38
.nr 38 \w0
.if \n(31<\n(38 .nr 31 \n(38
.nr 38 \w.33
.if \n(32<\n(38 .nr 32 \n(38
.nr 38 \wDefault
.if \n(81<\n(38 .nr 81 \n(38
.nr 38 \w35
.if \n(31<\n(38 .nr 31 \n(38
.nr 38 \w-99
.if \n(31<\n(38 .nr 31 \n(38
.nr 38 \w0
.if \n(31<\n(38 .nr 31 \n(38
.nr 38 \w0
.if \n(31<\n(38 .nr 31 \n(38
.nr 38 \w1
.if \n(31<\n(38 .nr 31 \n(38
.nr 38 \w.E+36
.if \n(32<\n(38 .nr 32 \n(38
.nr 38 \w0
.if \n(31<\n(38 .nr 31 \n(38
.nr 38 \w0
.if \n(31<\n(38 .nr 31 \n(38
.nr 38 \w.33
.if \n(32<\n(38 .nr 32 \n(38
.nr 38 \w0
.if \n(31<\n(38 .nr 31 \n(38
.nr 38 \w.67
.if \n(32<\n(38 .nr 32 \n(38
.nr 38 \w0
.if \n(31<\n(38 .nr 31 \n(38
.nr 38 \w.50
.if \n(32<\n(38 .nr 32 \n(38
.81
.rm 81
.nr 61 \n(31
.nr 38 \n(61+\n(32
.if \n(38>\n(81 .nr 81 \n(38
.if \n(38<\n(81 .nr 61 +(\n(81-\n(38)/2
.nr 82 0
.82
.rm 82
.nr 83 0
.83
.rm 83
.nr 84 0
.84
.rm 84
.nr 38 \wFunction-\n(82-3n-\n(83-3n-\n(84
.if \n(38>0 .nr 38 \n(38/2
.if \n(38<0 .nr 38 0
.nr 82 +\n(38
.nr 83 +\n(38
.nr 38 \wFunction-\n(82-3n-\n(83-3n-\n(84
.if \n(38>0 .nr 38 \n(38/2
.if \n(38<0 .nr 38 0
.nr 82 +\n(38
.nr 83 +\n(38
.35
.nf
.ll \n(34u
.nr 38 1n
.nr 79 0
.nr 40 \n(79+(0*\n(38)
.nr 80 +\n(40
.nr 41 \n(80+(3*\n(38)
.nr 81 +\n(41
.nr 61 +\n(41
.nr 42 \n(81+(3*\n(38)
.nr 82 +\n(42
.nr 43 \n(82+(3*\n(38)
.nr 83 +\n(43
.nr 44 \n(83+(3*\n(38)
.nr 84 +\n(44
.nr TW \n(84
.fc  
.nr #T 0-1
.nr #a 0-1
.eo
.de T#
.ds #d .d
.if \(ts\n(.z\(ts\(ts .ds #d nl
.mk ##
.nr ## -1v
.ls 1
.ls
..
.ec
.B
.ta \n(80u \n(81u \n(84u 
.nr 31 \n(.f
.nr 35 1m
\&\h'|\n(40u'Name\h'|\n(41u'Default\h'|\n(42u'Function
.R
.sp
.ne \n(a|u+\n(.Vu
.if (\n(a|+\n(#^-1v)>\n(#- .nr #- +(\n(a|+\n(#^-\n(#--1v)
.ta \n(80u \n(61u \n(81u \n(84u 
.nr 31 \n(.f
.nr 35 1m
\&\h'|\n(40u'EXT\h'|\n(41u'0.25\h'|\n(42u'
.mk ##
.nr 31 \n(##
.sp |\n(##u-1v
.nr 37 \n(42u
.in +\n(37u
.a+
.in -\n(37u
.mk 32
.if \n(32>\n(31 .nr 31 \n(32
.sp |\n(31u
.sp
.ne \n(b|u+\n(.Vu
.if (\n(b|+\n(#^-1v)>\n(#- .nr #- +(\n(b|+\n(#^-\n(#--1v)
.ta \n(80u \n(61u \n(81u \n(84u 
.nr 31 \n(.f
.nr 35 1m
\&\h'|\n(40u'SIDE\h'|\n(41u'0.90\h'|\n(42u'
.mk ##
.nr 31 \n(##
.sp |\n(##u-1v
.nr 37 \n(42u
.in +\n(37u
.b+
.in -\n(37u
.mk 32
.if \n(32>\n(31 .nr 31 \n(32
.sp |\n(31u
.sp
.ne \n(c|u+\n(.Vu
.if (\n(c|+\n(#^-1v)>\n(#- .nr #- +(\n(c|+\n(#^-\n(#--1v)
.ta \n(80u \n(61u \n(81u \n(84u 
.nr 31 \n(.f
.nr 35 1m
\&\h'|\n(40u'XLT\h'|\n(41u'0.05\h'|\n(42u'
.mk ##
.nr 31 \n(##
.sp |\n(##u-1v
.nr 37 \n(42u
.in +\n(37u
.c+
.in -\n(37u
.mk 32
.if \n(32>\n(31 .nr 31 \n(32
.sp |\n(31u
.sp
.ne \n(d|u+\n(.Vu
.if (\n(d|+\n(#^-1v)>\n(#- .nr #- +(\n(d|+\n(#^-\n(#--1v)
.ta \n(80u \n(61u \n(81u \n(84u 
.nr 31 \n(.f
.nr 35 1m
\&\h'|\n(40u'YBT\h'|\n(41u'0.05\h'|\n(42u'
.mk ##
.nr 31 \n(##
.sp |\n(##u-1v
.nr 37 \n(42u
.in +\n(37u
.d+
.in -\n(37u
.mk 32
.if \n(32>\n(31 .nr 31 \n(32
.sp |\n(31u
.sp
.ne \n(e|u+\n(.Vu
.if (\n(e|+\n(#^-1v)>\n(#- .nr #- +(\n(e|+\n(#^-\n(#--1v)
.ta \n(80u \n(61u \n(81u \n(84u 
.nr 31 \n(.f
.nr 35 1m
\&\h'|\n(40u'INITA\h'|\n(41u'2\h'|\n(42u'
.mk ##
.nr 31 \n(##
.sp |\n(##u-1v
.nr 37 \n(42u
.in +\n(37u
.e+
.in -\n(37u
.mk 32
.if \n(32>\n(31 .nr 31 \n(32
.sp |\n(31u
.sp
.ne \n(f|u+\n(.Vu
.if (\n(f|+\n(#^-1v)>\n(#- .nr #- +(\n(f|+\n(#^-\n(#--1v)
.ta \n(80u \n(61u \n(81u \n(84u 
.nr 31 \n(.f
.nr 35 1m
\&\h'|\n(40u'INITB\h'|\n(41u'2\h'|\n(42u'
.mk ##
.nr 31 \n(##
.sp |\n(##u-1v
.nr 37 \n(42u
.in +\n(37u
.f+
.in -\n(37u
.mk 32
.if \n(32>\n(31 .nr 31 \n(32
.sp |\n(31u
.sp
.ne \n(g|u+\n(.Vu
.if (\n(g|+\n(#^-1v)>\n(#- .nr #- +(\n(g|+\n(#^-\n(#--1v)
.ta \n(80u \n(61u \n(81u \n(84u 
.nr 31 \n(.f
.nr 35 1m
\&\h'|\n(40u'AROWL\h'|\n(41u'0.33\h'|\n(42u'
.mk ##
.nr 31 \n(##
.sp |\n(##u-1v
.nr 37 \n(42u
.in +\n(37u
.g+
.in -\n(37u
.mk 32
.if \n(32>\n(31 .nr 31 \n(32
.sp |\n(31u
.bp
.T&
.B
.ta \n(80u \n(81u \n(84u 
.nr 31 \n(.f
.nr 35 1m
\&\h'|\n(40u'Name\h'|\n(41u'Default\h'|\n(42u'Function
.R
.sp
.ne \n(h|u+\n(.Vu
.if (\n(h|+\n(#^-1v)>\n(#- .nr #- +(\n(h|+\n(#^-\n(#--1v)
.ta \n(80u \n(61u \n(81u \n(84u 
.nr 31 \n(.f
.nr 35 1m
\&\h'|\n(40u'ITERP\h'|\n(41u'35\h'|\n(42u'
.mk ##
.nr 31 \n(##
.sp |\n(##u-1v
.nr 37 \n(42u
.in +\n(37u
.h+
.in -\n(37u
.mk 32
.if \n(32>\n(31 .nr 31 \n(32
.sp |\n(31u
.sp
.ne \n(i|u+\n(.Vu
.if (\n(i|+\n(#^-1v)>\n(#- .nr #- +(\n(i|+\n(#^-\n(#--1v)
.ta \n(80u \n(61u \n(81u \n(84u 
.nr 31 \n(.f
.nr 35 1m
\&\h'|\n(40u'ITERC\h'|\n(41u'-99\h'|\n(42u'
.mk ##
.nr 31 \n(##
.sp |\n(##u-1v
.nr 37 \n(42u
.in +\n(37u
.i+
.in -\n(37u
.mk 32
.if \n(32>\n(31 .nr 31 \n(32
.sp |\n(31u
.sp
.ne \n(j|u+\n(.Vu
.if (\n(j|+\n(#^-1v)>\n(#- .nr #- +(\n(j|+\n(#^-\n(#--1v)
.ta \n(80u \n(61u \n(81u \n(84u 
.nr 31 \n(.f
.nr 35 1m
\&\h'|\n(40u'IGFLG\h'|\n(41u'0\h'|\n(42u'
.mk ##
.nr 31 \n(##
.sp |\n(##u-1v
.nr 37 \n(42u
.in +\n(37u
.j+
.in -\n(37u
.mk 32
.if \n(32>\n(31 .nr 31 \n(32
.sp |\n(31u
.sp
.ne \n(k|u+\n(.Vu
.if (\n(k|+\n(#^-1v)>\n(#- .nr #- +(\n(k|+\n(#^-\n(#--1v)
.ta \n(80u \n(61u \n(81u \n(84u 
.nr 31 \n(.f
.nr 35 1m
\&\h'|\n(40u'IMSG\h'|\n(41u'0\h'|\n(42u'
.mk ##
.nr 31 \n(##
.sp |\n(##u-1v
.nr 37 \n(42u
.in +\n(37u
.k+
.in -\n(37u
.mk 32
.if \n(32>\n(31 .nr 31 \n(32
.sp |\n(31u
.sp
.ne \n(l|u+\n(.Vu
.if (\n(l|+\n(#^-1v)>\n(#- .nr #- +(\n(l|+\n(#^-\n(#--1v)
.ta \n(80u \n(61u \n(81u \n(84u 
.nr 31 \n(.f
.nr 35 1m
\&\h'|\n(40u'UVMSG\h'|\n(41u'1.E+36\h'|\n(42u'
.mk ##
.nr 31 \n(##
.sp |\n(##u-1v
.nr 37 \n(42u
.in +\n(37u
.l+
.in -\n(37u
.mk 32
.if \n(32>\n(31 .nr 31 \n(32
.sp |\n(31u
.sp
.ne \n(m|u+\n(.Vu
.if (\n(m|+\n(#^-1v)>\n(#- .nr #- +(\n(m|+\n(#^-\n(#--1v)
.ta \n(80u \n(61u \n(81u \n(84u 
.nr 31 \n(.f
.nr 35 1m
\&\h'|\n(40u'ICYC\h'|\n(41u'0\h'|\n(42u'
.mk ##
.nr 31 \n(##
.sp |\n(##u-1v
.nr 37 \n(42u
.in +\n(37u
.m+
.in -\n(37u
.mk 32
.if \n(32>\n(31 .nr 31 \n(32
.sp |\n(31u
.sp
.ne \n(n|u+\n(.Vu
.if (\n(n|+\n(#^-1v)>\n(#- .nr #- +(\n(n|+\n(#^-\n(#--1v)
.ta \n(80u \n(61u \n(81u \n(84u 
.nr 31 \n(.f
.nr 35 1m
\&\h'|\n(40u'DISPL\h'|\n(41u'0.33\h'|\n(42u'
.mk ##
.nr 31 \n(##
.sp |\n(##u-1v
.nr 37 \n(42u
.in +\n(37u
.n+
.in -\n(37u
.mk 32
.if \n(32>\n(31 .nr 31 \n(32
.sp |\n(31u
.sp
.ne \n(o|u+\n(.Vu
.if (\n(o|+\n(#^-1v)>\n(#- .nr #- +(\n(o|+\n(#^-\n(#--1v)
.ta \n(80u \n(61u \n(81u \n(84u 
.nr 31 \n(.f
.nr 35 1m
\&\h'|\n(40u'DISPC\h'|\n(41u'0.67\h'|\n(42u'
.mk ##
.nr 31 \n(##
.sp |\n(##u-1v
.nr 37 \n(42u
.in +\n(37u
.o+
.in -\n(37u
.mk 32
.if \n(32>\n(31 .nr 31 \n(32
.sp |\n(31u
.sp
.ne \n(p|u+\n(.Vu
.if (\n(p|+\n(#^-1v)>\n(#- .nr #- +(\n(p|+\n(#^-\n(#--1v)
.ta \n(80u \n(61u \n(81u \n(84u 
.nr 31 \n(.f
.nr 35 1m
\&\h'|\n(40u'CSTOP\h'|\n(41u'0.50\h'|\n(42u'
.mk ##
.nr 31 \n(##
.sp |\n(##u-1v
.nr 37 \n(42u
.in +\n(37u
.p+
.in -\n(37u
.mk 32
.if \n(32>\n(31 .nr 31 \n(32
.sp |\n(31u
.fc
.nr T. 1
.T# 1
.35
.rm a+
.rm b+
.rm c+
.rm d+
.rm e+
.rm f+
.rm g+
.rm h+
.rm i+
.rm j+
.rm k+
.rm l+
.rm m+
.rm n+
.rm o+
.rm p+
.TE
.if \n-(b.=0 .nr c. \n(.c-\n(d.-178
.H 3 "Discussion of DISPL, DISPC, and CSTOP"
Assume a value of 0.33 for DISPL.  This
means that it will take three steps to move
across one grid box if the flow was all in the
X direction. If the flow is zonal, then a
larger value of DISPL is in order.
If the flow is highly turbulent, then
a smaller value is in order. 
.sp
\fBNote:\fR  The smaller
DISPL, the more the CPU time.  A value
of 2 to 4 times DISPL is a reasonable value
for DISPC.  DISPC should always be greater
than DISPL. A value of 0.33 for CSTOP would
mean that a maximum of three stream-
lines will be drawn per grid box. This max
will normally only occur in areas of singular
points.
.H 3 "Note"
Any or all of the above
parameters may be changed
by utilizing common blocks
STR02 and/or STR03.
.sp
.TS
.if \n+(b.=1 .nr d. \n(.c-\n(c.-1
.de 35
.ps \n(.s
.vs \n(.vu
.in \n(.iu
.if \n(.u .fi
.if \n(.j .ad
.if \n(.j=0 .na
..
.nf
.nr #~ 0
.if n .nr #~ 0.6n
.ds #d .d
.if \(ts\n(.z\(ts\(ts .ds #d nl
.fc
.nr 33 \n(.s
.rm 80 81 82 83 84
.nr 34 \n(.lu
.eo
.am 82
.br
.di a+
.35
.ft \n(.f
.ll \n(34u*3u/6u
.if \n(.l<\n(82 .ll \n(82u
.in 0
The smallest real number
on the host computer.  This
is set automatically by
R1MACH.
.br
.di
.nr a| \n(dn
.nr a- \n(dl
..
.ec \
.eo
.am 82
.br
.di b+
.35
.ft \n(.f
.ll \n(34u*3u/6u
.if \n(.l<\n(82 .ll \n(82u
.in 0
This parameter is located
in DRWSTR. It specifies the
length of the circular
lists  used for checking
for STRMLN crossovers.
For most plots this number
may be reduced to 500
or less and the plots will
not be altered.
.br
.di
.nr b| \n(dn
.nr b- \n(dl
..
.ec \
.eo
.am 82
.br
.di c+
.35
.ft \n(.f
.ll \n(34u*3u/6u
.if \n(.l<\n(82 .ll \n(82u
.in 0
Number of bits to be
skipped to get to the
least two significant bits
in a floating point number.
The default value is set to
I1MACH(5) - 2. This value
may have to be changed
depending on the target
computer; see subroutine
DRWSTR.
.br
.di
.nr c| \n(dn
.nr c- \n(dl
..
.ec \
.35
.nf
.ll \n(34u
.nr 80 0
.nr 38 \wUXSML
.if \n(80<\n(38 .nr 80 \n(38
.nr 38 \wNCHK
.if \n(80<\n(38 .nr 80 \n(38
.nr 38 \wISKIP
.if \n(80<\n(38 .nr 80 \n(38
.80
.rm 80
.nr 81 0
.nr 31 0
.nr 32 0
.nr 38 \w1
.if \n(31<\n(38 .nr 31 \n(38
.nr 38 \w.E-50
.if \n(32<\n(38 .nr 32 \n(38
.nr 38 \w750
.if \n(31<\n(38 .nr 31 \n(38
.81
.rm 81
.nr 61 \n(31
.nr 38 \n(61+\n(32
.if \n(38>\n(81 .nr 81 \n(38
.if \n(38<\n(81 .nr 61 +(\n(81-\n(38)/2
.nr 82 0
.82
.rm 82
.nr 83 0
.83
.rm 83
.nr 84 0
.84
.rm 84
.35
.nf
.ll \n(34u
.nr 38 1n
.nr 79 0
.nr 40 \n(79+(0*\n(38)
.nr 80 +\n(40
.nr 41 \n(80+(3*\n(38)
.nr 81 +\n(41
.nr 61 +\n(41
.nr 42 \n(81+(3*\n(38)
.nr 82 +\n(42
.nr 43 \n(82+(3*\n(38)
.nr 83 +\n(43
.nr 44 \n(83+(3*\n(38)
.nr 84 +\n(44
.nr TW \n(84
.fc  
.nr #T 0-1
.nr #a 0-1
.eo
.de T#
.ds #d .d
.if \(ts\n(.z\(ts\(ts .ds #d nl
.mk ##
.nr ## -1v
.ls 1
.ls
..
.ec
.ne \n(a|u+\n(.Vu
.if (\n(a|+\n(#^-1v)>\n(#- .nr #- +(\n(a|+\n(#^-\n(#--1v)
.ta \n(80u \n(61u \n(81u \n(84u 
.nr 31 \n(.f
.nr 35 1m
\&\h'|\n(40u'UXSML\h'|\n(41u'1.E-50\h'|\n(42u'
.mk ##
.nr 31 \n(##
.sp |\n(##u-1v
.nr 37 \n(42u
.in +\n(37u
.a+
.in -\n(37u
.mk 32
.if \n(32>\n(31 .nr 31 \n(32
.sp |\n(31u
.sp
.ne \n(b|u+\n(.Vu
.if (\n(b|+\n(#^-1v)>\n(#- .nr #- +(\n(b|+\n(#^-\n(#--1v)
.ta \n(80u \n(61u \n(81u \n(84u 
.nr 31 \n(.f
.nr 35 1m
\&\h'|\n(40u'NCHK\h'|\n(41u'750\h'|\n(42u'
.mk ##
.nr 31 \n(##
.sp |\n(##u-1v
.nr 37 \n(42u
.in +\n(37u
.b+
.in -\n(37u
.mk 32
.if \n(32>\n(31 .nr 31 \n(32
.sp |\n(31u
.sp
.ne \n(c|u+\n(.Vu
.if (\n(c|+\n(#^-1v)>\n(#- .nr #- +(\n(c|+\n(#^-\n(#--1v)
.ta \n(80u \n(81u \n(84u 
.nr 31 \n(.f
.nr 35 1m
\&\h'|\n(40u'ISKIP\h'|\n(41u'\h'|\n(42u'
.mk ##
.nr 31 \n(##
.sp |\n(##u-1v
.nr 37 \n(42u
.in +\n(37u
.c+
.in -\n(37u
.mk 32
.if \n(32>\n(31 .nr 31 \n(32
.sp |\n(31u
.fc
.nr T. 1
.T# 1
.35
.rm a+
.rm b+
.rm c+
.TE
.if \n-(b.=0 .nr c. \n(.c-\n(d.-34
