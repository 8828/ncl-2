.\"
.\"	$Id: conrcq.m,v 1.1.1.1 1992-04-17 22:30:19 ncargd Exp $
.\"
.TH CONRCQ 3NCARG "MARCH 1988" NCAR "NCAR GRAPHICS"
.so MACRO_SOURCE
.dsNA " CONRECQCK - Contours 2-d arrays, no labeling
.dsS1 " CALL EZCNTR (Z,M,N) if criteria below is met, else
.nrsN 1
./" USE tsi to PRINT THIS FILE!
.pn 165
.bp
.PH ""
.PF ""
.SK 1
.tr ~
.po -.25i
.ll 6.5i
.PH ""
.EH "@\s9NCAR Graphics User's Guide\s11@@@"
.OH "@@@\s9CONRECQK\s11@"
.EF "@\s\fB11%\s9\fR@@August 1987\s11@"
.OF "@\s9August 1987@@\s11\fB%\fR@"
.de hD          \" Heading macro 
.br
.ne 5
.sp 2
.ps +3
.ft B           \" boldface, 14 pt.
\\$1
.ft R
.ps -3
.sp 
..
.de >>          \" display for indented lines
.in +.25i       \" usage: .>>
.sp
.nf
..              
.de <<          \" end of display for indented lines
.fi
.in -.25i       \" usage: .<<
.sp
..              
.de sf          \"start fortran (constant spacing)
.ps 10
.vs 12
.nf
.ft L
..
.de ef          \"end fortran (resume variable spacing & prev. size & font)
.ft
.fi
.ps
.vs
..
.br
.S 14
.S 11
.nf
.na
SUBROUTINE CONREC (Z,L,M,N,FLO,HI,FINC,NSET,NHI,NDOT)
.ad
.fi
.H 3 "Dimension of Arguments"
Z(L,N)
.H 3 "\fBLatest Revision\fR"
August 1987
.H 3 "\fBPurpose\fR"
CONRECQCK draws a contour map from data stored
in a rectangular array.  No line labels.
.H 3 "\fBUsage\fR"
If the following assumptions are met, use
.sp
CALL EZCNTR (Z,M,N)
.sp
Assumptions:
.BL
.LI
All of the array is to be contoured.
.LI
Contour levels are picked internally.
.LI
Contouring routine picks scale factors.
.LI
Highs and lows are marked.
.LI
Negative lines are drawn with a dashed line pattern.
.LI
EZCNTR calls FRAME after drawing the contour map.
.LE
.sp
If these assumptions are not met, use
.sp
CALL CONREC (Z,L,M,N,FLO,HI,FINC,NSET,NHI,NDOT)
.sp 2
.H 2 "\fBARGUMENTS\fR"
.sp
.H 3 "\fBOn Input for EZCNTR\fR"
.VL .6i
.LI "\fBZ\fR"
M by N array to be contoured.
.LI "\fBM\fR"
First dimension of Z.
.LI "\fBN\fR"
Second dimension of Z.
.LE
.sp
.H 3 "\fBOn Output for EZCNTR\fR"
All arguments are unchanged.
.H 3 "\fBOn Input for CONREC\fR"
.VL .6i
.LI "\fBZ\fR"
The (origin of the) array to be
contoured.  Z is dimensioned L by N.
.LI "\fBL\fR"
The first dimension of Z in the calling
program.
.LI "\fBM\fR"
The number of data values to be contoured
in the \%X-direction (the first subscript
direction).  When plotting an entire
array, L = M.
.LI "\fBN\fR"
The number of data values to be contoured
in the \%Y-direction (the second subscript
direction).
.LI "\fBFLO\fR"
The value of the lowest contour level.
If FLO~=~HI~=~0., a value rounded up from
the minimum Z is generated by CONREC.
.LI "\fBHI\fR"
The value of the highest contour level.
If HI = FLO = 0., a value rounded down
from the maximum Z is generated by
.hw CONREC
CONREC.
.LI "\fBFINC\fR"
.VL .55i
.LI ">~0"
Increment between contour levels.
.LI "=~0"
A value, which produces between 10
and 30 contour levels at nice values, is generated by CONREC.
.LI "<~0"
The number of levels generated by CONREC is ABS(FINC).
.LE
.LI "\fBNSET\fR"
Flag to control scaling.
.VL 1c
.LI "=~0"
CONREC automatically sets the window and viewport to properly
scale the frame to the standard configuration.
The GRIDAL entry PERIM is called and tick marks are placed
corresponding to the data points.
.LI ">~0"
CONREC assumes that the user has set the window and viewport
in such a way as to properly scale the plotting
instructions generated by CONREC.
PERIM is not called.
.LI "<~0"
CONREC generates coordinates so as
to place the (untransformed) contour
plot within the limits of the
user's current window and
viewport.  PERIM is not called.
.LE
.LI "\fBNHI\fR"
Flag to control extra information on the
contour plot.
.VL 1c
.LI "= 0"
Highs and lows are marked with an H
or L as appropriate, and the value
of the high or low is plotted under
the symbol.
.LI "> 0"
The data values are plotted at
each Z point, with the center of
the string indicating the data
point location.
.LI "< 0"
Neither of the above.
.LE
.LI "\fBNDOT\fR"
A 10-bit constant designating the desired
dashed line pattern.
If ABS(NDOT) = 0, 1, or 1023, solid lines
are drawn.
.VL 1c
.LI "> 0"
NDOT pattern is used for all lines.
.LI "< 0"
ABS(NDOT) pattern is used for negative-valued contour lines, and solid is
used for positive-valued contours.
.hw CONREC
CONREC converts NDOT
to a 16-bit pattern and DASHDB is used.
See DASHDB comments in the DASHLINE
documentation for details.
.LE
.LE
.sp
.H 3 "\fBOn Output for CONREC\fR"
All arguments are unchanged.
.H 3 "\fBEntry Points\fR"
CONREC, CLGEN, QUICK, MAXMIN, PNTVAL,
CALCNT, EZCNTR, CONBD
.H 3 "\fBCommon Blocks\fR"
CONRE1, CONRE4, CONRE5
.H 3 "\fBRequired Library Routines\fR"
GRIDAL, the ERPRT77 package, and the SPPS.
DASHCHAR is also needed.
.H 3 "\fBRequired GKS Level\fR"
0A
.H 3 "\fBNote for NCAR Users\fR"
This routine is NOT part of the default
.hw CONRECQCK
libraries at NCAR.  CONRECQCK must be
be acquired, compiled, and loaded to be
used at NCAR.
.H 3 "\fBI/O\fR"
Plots contour map.
.H 3 "\fBPrecision\fR"
Single
.H 3 "\fBLanguage\fR"
FORTRAN 77
.H 3 "\fBHistory\fR"
A faster version of CONREC without line
labeling capabilities.
.H 3 "\fBAlgorithm\fR"
The grid space is divided into L*N
cells.  Each cell is processed in turn,
drawing all contour lines in the
particular cell until the entire
rectangular space is contoured.  (This
could result in a relatively long plot
time on mechanical plotters but does
not affect the plot time on CRT-based
plotters.)
.H 3 "\fBNote\fR"
To draw non-uniform contour levels, see
the comments in CLGEN.  To make special
modifications for specific needs, see the
explanation of the internal parameters
below.
.H 3 "\fBTiming\fR"
Varies widely with size and smoothness of Z.
.H 3 "\fBInternal Parameters\fR"    
.TS H
.if \n+(b.=1 .nr d. \n(.c-\n(c.-1
.de 35
.ps \n(.s
.vs \n(.vu
.in \n(.iu
.if \n(.u .fi
.if \n(.j .ad
.if \n(.j=0 .na
..
.nf
.nr #~ 0
.if n .nr #~ 0.6n
.ds #d .d
.if \(ts\n(.z\(ts\(ts .ds #d nl
.fc
.nr 33 \n(.s
.rm 80 81 82 83 84 85
.nr 34 \n(.lu
.eo
.am 82
.br
.di a+
.35
.ft \n(.f
.ll \n(34u*4u/7u
.if \n(.l<\n(82 .ll \n(82u
.in 0
Size of labels for minimums and maximums, as per the size definitions given in the SPPS documentation for WTSTR.
.br
.di
.nr a| \n(dn
.nr a- \n(dl
..
.ec \
.eo
.am 82
.br
.di b+
.35
.ft \n(.f
.ll \n(34u*4u/7u
.if \n(.l<\n(82 .ll \n(82u
.in 0
.ad b
Size of labels for data
point values as per the size
definitions given in the SPPS
documentation for WTSTR.
.br
.di
.nr b| \n(dn
.nr b- \n(dl
..
.ec \
.eo
.am 82
.br
.di c+
.35
.ft \n(.f
.ll \n(34u*4u/7u
.if \n(.l<\n(82 .ll \n(82u
.in 0
.ad b
Approximate number of
contour levels when
internally generated.
.br
.di
.nr c| \n(dn
.nr c- \n(dl
..
.ec \
.eo
.am 82
.br
.di d+
.35
.ft \n(.f
.ll \n(34u*4u/7u
.if \n(.l<\n(82 .ll \n(82u
.in 0
.ad b
Maximum number of contour
levels.  If this is to be
increased, the dimensions
.hw CONREC
of CL and RWORK in CONREC
must be increased by the
same amount.
.br
.di
.nr d| \n(dn
.nr d- \n(dl
..
.ec \
.eo
.am 82
.br
.di e+
.35
.ft \n(.f
.ll \n(34u*4u/7u
.if \n(.l<\n(82 .ll \n(82u
.in 0
.ad b
Left hand edge of the plot
(0.0 is the left edge of
the frame and 1.0 is the
right edge of the frame.)
.br
.di
.nr e| \n(dn
.nr e- \n(dl
..
.ec \
.eo
.am 82
.br
.di f+
.35
.ft \n(.f
.ll \n(34u*4u/7u
.if \n(.l<\n(82 .ll \n(82u
.in 0
.ad b
Bottom edge of the plot
(0.0 is the bottom of the
frame and 1.0 is the top
of the frame.)
.br
.di
.nr f| \n(dn
.nr f- \n(dl
..
.ec \
.eo
.am 82
.br
.di g+
.35
.ft \n(.f
.ll \n(34u*4u/7u
.if \n(.l<\n(82 .ll \n(82u
.in 0
.ad b
Length of longer edge of
plot (see also EXT).
.br
.di
.nr g| \n(dn
.nr g- \n(dl
..
.ec \
.eo
.am 82
.br
.di h+
.35
.ft \n(.f
.ll \n(34u*4u/7u
.if \n(.l<\n(82 .ll \n(82u
.in 0
.ad b
Flag to control
normalization of label
numbers.
.BL
.LI
IOFFD = 0 means include
decimal point when
possible (do not
normalize unless
required).
.LI
IOFFD non-zero means
normalize all label
numbers and output a
scale factor in the
message below the graph.
.LE
.br
.di
.nr h| \n(dn
.nr h- \n(dl
..
.ec \
.eo
.am 82
.br
.di i+
.35
.ft \n(.f
.ll \n(34u*4u/7u
.if \n(.l<\n(82 .ll \n(82u
.in 0
.ad b
Lengths of the sides of the
plot are proportional to M
.hw CONREC
and N (when CONREC sets
the window and viewport).
In extreme cases, when
MIN(M,N)/MAX(M,N) is less
than EXT, CONREC
produces a square plot.
.br
.di
.nr i| \n(dn
.nr i- \n(dl
..
.ec \
.eo
.am 82
.br
.di j+
.35
.ft \n(.f
.ll \n(34u*4u/7u
.if \n(.l<\n(82 .ll \n(82u
.in 0
.ad b
Flag to control special
value feature.
.sp
.BL
.LI
IOFFP = 0 means special
value feature not in use.
.LI
IOFFP non-zero means
special value feature in
use.  (SPVAL is set to the
special value.)  Contour
lines will then be
omitted from any cell
with any corner equal to
the special value.
.LE
.br
.di
.nr j| \n(dn
.nr j- \n(dl
..
.ec \
.eo
.am 82
.br
.di k+
.35
.ft \n(.f
.ll \n(34u*4u/7u
.if \n(.l<\n(82 .ll \n(82u
.in 0
.ad b
Contains the special value
when IOFFP is non-zero.
.br
.di
.nr k| \n(dn
.nr k- \n(dl
..
.ec \
.eo
.am 82
.br
.di l+
.35
.ft \n(.f
.ll \n(34u*4u/7u
.if \n(.l<\n(82 .ll \n(82u
.in 0
.ad b
Flag to control the message
below the plot.
.BL
.LI
IOFFM = 0  if the message
is to be plotted.
.LI
IOFFM non-zero if the
message is to be omitted.
.LE
.br
.di
.nr l| \n(dn
.nr l- \n(dl
..
.ec \
.35
.nf
.ll \n(34u
.nr 80 0
.nr 38 \wName
.if \n(80<\n(38 .nr 80 \n(38
.nr 38 \wISIZEM
.if \n(80<\n(38 .nr 80 \n(38
.nr 38 \wISIZEP
.if \n(80<\n(38 .nr 80 \n(38
.nr 38 \wNLA
.if \n(80<\n(38 .nr 80 \n(38
.nr 38 \wNLM
.if \n(80<\n(38 .nr 80 \n(38
.nr 38 \wXLT
.if \n(80<\n(38 .nr 80 \n(38
.nr 38 \wYBT
.if \n(80<\n(38 .nr 80 \n(38
.nr 38 \wSIDE
.if \n(80<\n(38 .nr 80 \n(38
.nr 38 \wIOFFD
.if \n(80<\n(38 .nr 80 \n(38
.nr 38 \wEXT
.if \n(80<\n(38 .nr 80 \n(38
.nr 38 \wIOFFP
.if \n(80<\n(38 .nr 80 \n(38
.nr 38 \wSPVAL
.if \n(80<\n(38 .nr 80 \n(38
.nr 38 \wIOFFM
.if \n(80<\n(38 .nr 80 \n(38
.80
.rm 80
.nr 81 0
.nr 38 \wDefault
.if \n(81<\n(38 .nr 81 \n(38
.nr 31 0
.nr 32 0
.nr 38 \w2
.if \n(31<\n(38 .nr 31 \n(38
.nr 38 \w0
.if \n(31<\n(38 .nr 31 \n(38
.nr 38 \w16
.if \n(31<\n(38 .nr 31 \n(38
.nr 38 \w40
.if \n(31<\n(38 .nr 31 \n(38
.nr 38 \w.05
.if \n(32<\n(38 .nr 32 \n(38
.nr 38 \w.05
.if \n(32<\n(38 .nr 32 \n(38
.nr 38 \w0
.if \n(31<\n(38 .nr 31 \n(38
.nr 38 \w.9
.if \n(32<\n(38 .nr 32 \n(38
.nr 38 \w0
.if \n(31<\n(38 .nr 31 \n(38
.nr 38 \w.25
.if \n(32<\n(38 .nr 32 \n(38
.nr 38 \w0
.if \n(31<\n(38 .nr 31 \n(38
.nr 38 \w0
.if \n(31<\n(38 .nr 31 \n(38
.nr 38 \w0
.if \n(31<\n(38 .nr 31 \n(38
.81
.rm 81
.nr 61 \n(31
.nr 38 \n(61+\n(32
.if \n(38>\n(81 .nr 81 \n(38
.if \n(38<\n(81 .nr 61 +(\n(81-\n(38)/2
.nr 82 0
.82
.rm 82
.nr 83 0
.83
.rm 83
.nr 84 0
.84
.rm 84
.nr 85 0
.85
.rm 85
.nr 38 \wFunction-\n(82-3n-\n(83-3n-\n(84-3n-\n(85
.if \n(38>0 .nr 38 \n(38/3
.if \n(38<0 .nr 38 0
.nr 82 +\n(38
.nr 83 +\n(38
.nr 84 +\n(38
.35
.nf
.ll \n(34u
.nr 38 1n
.nr 79 0
.nr 40 \n(79+(0*\n(38)
.nr 80 +\n(40
.nr 41 \n(80+(3*\n(38)
.nr 81 +\n(41
.nr 61 +\n(41
.nr 42 \n(81+(3*\n(38)
.nr 82 +\n(42
.nr 43 \n(82+(3*\n(38)
.nr 83 +\n(43
.nr 44 \n(83+(3*\n(38)
.nr 84 +\n(44
.nr 45 \n(84+(3*\n(38)
.nr 85 +\n(45
.nr TW \n(85
.fc  
.nr #T 0-1
.nr #a 0-1
.eo
.de T#
.ds #d .d
.if \(ts\n(.z\(ts\(ts .ds #d nl
.mk ##
.nr ## -1v
.ls 1
.ls
..
.ec
.B
.ta \n(80u \n(81u \n(85u 
.nr 31 \n(.f
.nr 35 1m
\&\h'|\n(40u'Name\h'|\n(41u'Default\h'|\n(42u'Function
.R
.TH
.sp
.ne \n(a|u+\n(.Vu
.if (\n(a|+\n(#^-1v)>\n(#- .nr #- +(\n(a|+\n(#^-\n(#--1v)
.ta \n(80u \n(61u \n(81u \n(85u 
.nr 31 \n(.f
.nr 35 1m
\&\h'|\n(40u'ISIZEM\h'|\n(41u'2\h'|\n(42u'
.mk ##
.nr 31 \n(##
.sp |\n(##u-1v
.nr 37 \n(42u
.in +\n(37u
.a+
.in -\n(37u
.mk 32
.if \n(32>\n(31 .nr 31 \n(32
.sp |\n(31u
.sp
.ne \n(b|u+\n(.Vu
.if (\n(b|+\n(#^-1v)>\n(#- .nr #- +(\n(b|+\n(#^-\n(#--1v)
.ta \n(80u \n(61u \n(81u \n(85u 
.nr 31 \n(.f
.nr 35 1m
\&\h'|\n(40u'ISIZEP\h'|\n(41u'0\h'|\n(42u'
.mk ##
.nr 31 \n(##
.sp |\n(##u-1v
.nr 37 \n(42u
.in +\n(37u
.b+
.in -\n(37u
.mk 32
.if \n(32>\n(31 .nr 31 \n(32
.sp |\n(31u
.sp
.ne \n(c|u+\n(.Vu
.if (\n(c|+\n(#^-1v)>\n(#- .nr #- +(\n(c|+\n(#^-\n(#--1v)
.ta \n(80u \n(61u \n(81u \n(85u 
.nr 31 \n(.f
.nr 35 1m
\&\h'|\n(40u'NLA\h'|\n(41u'16\h'|\n(42u'
.mk ##
.nr 31 \n(##
.sp |\n(##u-1v
.nr 37 \n(42u
.in +\n(37u
.c+
.in -\n(37u
.mk 32
.if \n(32>\n(31 .nr 31 \n(32
.sp |\n(31u
.sp
.ne \n(d|u+\n(.Vu
.if (\n(d|+\n(#^-1v)>\n(#- .nr #- +(\n(d|+\n(#^-\n(#--1v)
.ta \n(80u \n(61u \n(81u \n(85u 
.nr 31 \n(.f
.nr 35 1m
\&\h'|\n(40u'NLM\h'|\n(41u'40\h'|\n(42u'
.mk ##
.nr 31 \n(##
.sp |\n(##u-1v
.nr 37 \n(42u
.in +\n(37u
.d+
.in -\n(37u
.mk 32
.if \n(32>\n(31 .nr 31 \n(32
.sp |\n(31u
.sp
.ne \n(e|u+\n(.Vu
.if (\n(e|+\n(#^-1v)>\n(#- .nr #- +(\n(e|+\n(#^-\n(#--1v)
.ta \n(80u \n(61u \n(81u \n(85u 
.nr 31 \n(.f
.nr 35 1m
\&\h'|\n(40u'XLT\h'|\n(41u'.05\h'|\n(42u'
.mk ##
.nr 31 \n(##
.sp |\n(##u-1v
.nr 37 \n(42u
.in +\n(37u
.e+
.in -\n(37u
.mk 32
.if \n(32>\n(31 .nr 31 \n(32
.sp |\n(31u
.sp
.ne \n(f|u+\n(.Vu
.if (\n(f|+\n(#^-1v)>\n(#- .nr #- +(\n(f|+\n(#^-\n(#--1v)
.ta \n(80u \n(61u \n(81u \n(85u 
.nr 31 \n(.f
.nr 35 1m
\&\h'|\n(40u'YBT\h'|\n(41u'.05\h'|\n(42u'
.mk ##
.nr 31 \n(##
.sp |\n(##u-1v
.nr 37 \n(42u
.in +\n(37u
.f+
.in -\n(37u
.mk 32
.if \n(32>\n(31 .nr 31 \n(32
.sp |\n(31u
.sp
.ne \n(g|u+\n(.Vu
.if (\n(g|+\n(#^-1v)>\n(#- .nr #- +(\n(g|+\n(#^-\n(#--1v)
.ta \n(80u \n(61u \n(81u \n(85u 
.nr 31 \n(.f
.nr 35 1m
\&\h'|\n(40u'SIDE\h'|\n(41u'0.9\h'|\n(42u'
.mk ##
.nr 31 \n(##
.sp |\n(##u-1v
.nr 37 \n(42u
.in +\n(37u
.g+
.in -\n(37u
.mk 32
.if \n(32>\n(31 .nr 31 \n(32
.sp |\n(31u
.sp
.ne \n(h|u+\n(.Vu
.if (\n(h|+\n(#^-1v)>\n(#- .nr #- +(\n(h|+\n(#^-\n(#--1v)
.ta \n(80u \n(61u \n(81u \n(85u 
.nr 31 \n(.f
.nr 35 1m
\&\h'|\n(40u'IOFFD\h'|\n(41u'0\h'|\n(42u'
.mk ##
.nr 31 \n(##
.sp |\n(##u-1v
.nr 37 \n(42u
.in +\n(37u
.h+
.in -\n(37u
.mk 32
.if \n(32>\n(31 .nr 31 \n(32
.sp |\n(31u
.sp
.ne \n(i|u+\n(.Vu
.if (\n(i|+\n(#^-1v)>\n(#- .nr #- +(\n(i|+\n(#^-\n(#--1v)
.ta \n(80u \n(61u \n(81u \n(85u 
.nr 31 \n(.f
.nr 35 1m
\&\h'|\n(40u'EXT\h'|\n(41u'.25\h'|\n(42u'
.mk ##
.nr 31 \n(##
.sp |\n(##u-1v
.nr 37 \n(42u
.in +\n(37u
.i+
.in -\n(37u
.mk 32
.if \n(32>\n(31 .nr 31 \n(32
.sp |\n(31u
.sp
.ne \n(j|u+\n(.Vu
.if (\n(j|+\n(#^-1v)>\n(#- .nr #- +(\n(j|+\n(#^-\n(#--1v)
.ta \n(80u \n(61u \n(81u \n(85u 
.nr 31 \n(.f
.nr 35 1m
\&\h'|\n(40u'IOFFP\h'|\n(41u'0\h'|\n(42u'
.mk ##
.nr 31 \n(##
.sp |\n(##u-1v
.nr 37 \n(42u
.in +\n(37u
.j+
.in -\n(37u
.mk 32
.if \n(32>\n(31 .nr 31 \n(32
.sp |\n(31u
.sp
.ne \n(k|u+\n(.Vu
.if (\n(k|+\n(#^-1v)>\n(#- .nr #- +(\n(k|+\n(#^-\n(#--1v)
.ta \n(80u \n(61u \n(81u \n(85u 
.nr 31 \n(.f
.nr 35 1m
\&\h'|\n(40u'SPVAL\h'|\n(41u'0\h'|\n(42u'
.mk ##
.nr 31 \n(##
.sp |\n(##u-1v
.nr 37 \n(42u
.in +\n(37u
.k+
.in -\n(37u
.mk 32
.if \n(32>\n(31 .nr 31 \n(32
.sp |\n(31u
.sp
.ne \n(l|u+\n(.Vu
.if (\n(l|+\n(#^-1v)>\n(#- .nr #- +(\n(l|+\n(#^-\n(#--1v)
.ta \n(80u \n(61u \n(81u \n(85u 
.nr 31 \n(.f
.nr 35 1m
\&\h'|\n(40u'IOFFM\h'|\n(41u'0\h'|\n(42u'
.mk ##
.nr 31 \n(##
.sp |\n(##u-1v
.nr 37 \n(42u
.in +\n(37u
.l+
.in -\n(37u
.mk 32
.if \n(32>\n(31 .nr 31 \n(32
.sp |\n(31u
.sp
.fc
.nr T. 1
.T# 1
.35
.rm a+
.rm b+
.rm c+
.rm d+
.rm e+
.rm f+
.rm g+
.rm h+
.rm i+
.rm j+
.rm k+
.rm l+
.TE
.if \n-(b.=0 .nr c. \n(.c-\n(d.-136
.eH
