C
C	$Id: scpltw.f,v 1.1.1.1 1992-04-17 22:33:05 ncargd Exp $
C
      SUBROUTINE SCPLTW (MX,MY,IP)
C
C THIS IS A WINDOWING VERSION OF THE PLOT PACKAGE ROUTINE PLOTIT.
C
      COMMON /SCRLDT/ ICU,ICO,PCHSZ,GAPSZ,T1,T2,NXST,NXFIN,ICRTJP,
     +                LIM(4),MXOLD,MYOLD,LOLD,IBKG,LND,BGCLR(3),
     +                FGCLR(3),IFST,IWK,FIN,FOU,ISPB,ISPF,IDEN,IWU
      SAVE   /SCRLDT/
C
C LOCAL DIMENSIONED VARIABLES.
C
      DIMENSION       MXJ(4)     ,MYJ(4)     ,INDX(2)
C
C DECIDE WHETHER THIS IS A PEN-UP OR PEN-DOWN CALL.
C
      IF (IP.NE.0) GO TO 100
C
C PEN-UP MOTION.
C
      MXOLD = MX
      MYOLD = MY
      LOLD = 5 + (  3*( ISIGN(1,MY-LIM(3))+ISIGN(1,MY-LIM(4)) ) +
     +                ( ISIGN(1,MX-LIM(1))+ISIGN(1,MX-LIM(2)) )  )/2
      IF (LOLD .EQ. 5) CALL PLOTIT (MXOLD,MYOLD,0)
      RETURN
C
C PEN-DOWN MOTION.
C
  100 L = 5 + (  3*( ISIGN(1,MY-LIM(3))+ISIGN(1,MY-LIM(4)) ) +
     +             ( ISIGN(1,MX-LIM(1))+ISIGN(1,MX-LIM(2)) )  )/2
      JUMP = LOLD+(L-1)*9
C
C EACH COLUMN IN THIS JUMP TABLE CORRESPONDS TO A GIVEN OLD-POINT BOX
C NUMBER, EACH ROW TO A GIVEN NEW-POINT BOX NUMBER.  THE EFFECT OF EACH
C JUMP IS TO GET US TO CODE WHICH CAN HANDLE A GIVEN OLD/NEW PAIR.
C
C             1   2   3   4   5   6   7   8   9
C
      GO TO (141,141,141,141,132,114,141,114,114,
     2       141,141,141,114,102,114,114,114,114,
     3       141,141,141,114,136,141,114,114,141,
     4       141,114,114,141,109,114,141,114,114,
     5       133,107,137,112,101,113,125,108,129,
     6       114,114,141,114,111,141,114,114,141,
     7       141,114,114,141,124,114,141,141,141,
     8       114,114,114,114,106,114,141,141,141,
     9       114,114,141,114,128,141,141,141,141) , JUMP
C
C VISIBLE.
C
  101 CALL PLOTIT (MX,MY,1)
      GO TO 141
C
C HALF VISIBLE.
C
  102 LY = 3
      LT = 1
  103 MYI = LIM(LY)
      MXI = IFIX(FLOAT(MXOLD)+FLOAT(MYI-MYOLD)/FLOAT(MY-MYOLD)*
     +                                                  FLOAT(MX-MXOLD))
      IF (LT) 104,105,104
  104 CALL PLOTIT (MXI,MYI,1)
      GO TO 141
  105 CALL PLOTIT (MXI,MYI,0)
      CALL PLOTIT (MX,MY,1)
      GO TO 141
  106 LY = 4
      LT = 1
      GO TO 103
  107 LY = 3
      LT = 0
      GO TO 103
  108 LY = 4
      LT = 0
      GO TO 103
  109 LX = 1
      LT = 1
  110 MXI = LIM(LX)
      MYI = IFIX(FLOAT(MYOLD)+FLOAT(MXI-MXOLD)/FLOAT(MX-MXOLD)*
     +                                                  FLOAT(MY-MYOLD))
      IF (LT) 104,105,104
  111 LX = 2
      LT = 1
      GO TO 110
  112 LX = 1
      LT = 0
      GO TO 110
  113 LX = 2
      LT = 0
      GO TO 110
  114 CONTINUE
C
C LINE GOES THROUGH WINDOWED SECTION,BUT STARTS AND ENDS ELSEWHERE
C TEST TO SEE IF VERTICAL OR HORIZONTAL
C
      IF (MX-MXOLD) 116,115,116
  115 CALL PLOTIT (MX,LIM(3),0)
      CALL PLOTIT (MX,LIM(4),1)
      GO TO 141
  116 IF (MY-MYOLD) 118,117,118
  117 CALL PLOTIT (LIM(1),MY,0)
      CALL PLOTIT (LIM(2),MY,1)
      GO TO 141
  118 CONTINUE
      FM = FLOAT(MY-MYOLD)/FLOAT(MX-MXOLD)
      RFM = 1./FM
      CON = FLOAT(MY)-FM*FLOAT(MX)
      MYJ(1) = LIM(4)
      MXJ(1) = IFIX(RFM*(FLOAT(MYJ(1))-CON))
      MXJ(2) = LIM(1)
      MYJ(2) = IFIX(CON+FM*FLOAT(MXJ(2)))
      MXJ(3) = LIM(2)
      MYJ(3) = IFIX(CON+FM*FLOAT(MXJ(3)))
      MYJ(4) = LIM(3)
      MXJ(4) = IFIX(RFM*(FLOAT(MYJ(4))-CON))
      KK = 0
      IF (MXJ(1).LT.LIM(1) .OR. MXJ(1).GT.LIM(2)) GO TO 119
      KK = KK+1
      INDX(KK) = 1
  119 IF (MYJ(2).LT.LIM(3) .OR. MYJ(2).GT.LIM(4)) GO TO 120
      KK = KK+1
      INDX(KK) = 2
  120 IF (MYJ(3).LT.LIM(3) .OR. MYJ(3).GT.LIM(4)) GO TO 121
      KK = KK+1
      INDX(KK) = 3
  121 IF (MXJ(4).LT.LIM(1) .OR. MXJ(4).GT.LIM(2)) GO TO 122
      KK = KK+1
      INDX(KK) = 4
  122 IF (KK) 141,141,123
  123 I1 = INDX(1)
      I2 = INDX(2)
      CALL PLOTIT (MXJ(I1),MYJ(I1),0)
      CALL PLOTIT (MXJ(I2),MYJ(I2),1)
      GO TO 141
C
C STARTS OR ENDS IN DIAGONAL CORNERS WITH OTHER END IN WINDOWED
C SECTION
C
  124 MMX = MXOLD
      MMY = MYOLD
      GO TO 126
  125 MMX = MX
      MMY = MY
  126 CONTINUE
      FM = FLOAT(MY-MYOLD)/FLOAT(MX-MXOLD)
      CON = FLOAT(MY)-FM*FLOAT(MX)
      MXI = LIM(1)
      MYI = IFIX(CON+FM*FLOAT(MXI))
      IF (MYI.LT.LIM(3) .OR. MYI.GT.LIM(4)) GO TO 127
      GO TO 140
  127 MYI = LIM(4)
      MXI = IFIX((FLOAT(MYI)-CON)/FM)
      GO TO 140
  128 MMX = MXOLD
      MMY = MYOLD
      GO TO 130
  129 MMX = MX
      MMY = MY
  130 CONTINUE
      FM = FLOAT(MY-MYOLD)/FLOAT(MX-MXOLD)
      CON = FLOAT(MY)-FM*FLOAT(MX)
      MXI = LIM(2)
      MYI = IFIX(CON+FM*FLOAT(MXI))
      IF (MYI.LT.LIM(3) .OR. MYI.GT.LIM(4)) GO TO 131
      GO TO 140
  131 MYI = LIM(4)
      MXI = IFIX((FLOAT(MYI)-CON)/FM)
      GO TO 140
  132 MMX = MXOLD
      MMY = MYOLD
      GO TO 134
  133 MMX = MX
      MMY = MY
  134 CONTINUE
      FM = FLOAT(MY-MYOLD)/FLOAT(MX-MXOLD)
      CON = FLOAT(MY)-FM*FLOAT(MX)
      MXI = LIM(1)
      MYI = IFIX(CON+FM*FLOAT(MXI))
      IF (MYI.LT.LIM(3) .OR. MYI.GT.LIM(4)) GO TO 135
      GO TO 140
  135 MYI = LIM(3)
      MXI = IFIX((FLOAT(MYI)-CON)/FM)
      GO TO 140
  136 MMX = MXOLD
      MMY = MYOLD
      GO TO 138
  137 MMX = MX
      MMY = MY
  138 CONTINUE
      FM = FLOAT(MY-MYOLD)/FLOAT(MX-MXOLD)
      CON = FLOAT(MY)-FM*FLOAT(MX)
      MXI = LIM(2)
      MYI = IFIX(CON+FM*FLOAT(MXI))
      IF (MYI.LT.LIM(3) .OR. MYI.GT.LIM(4)) GO TO 139
      GO TO 140
  139 MYI = LIM(3)
      MXI = IFIX((FLOAT(MYI)-CON)/FM)
      GO TO 140
  140 CALL PLOTIT (MMX,MMY,0)
      CALL PLOTIT (MXI,MYI,1)
      GO TO 141
  141 MXOLD = MX
      MYOLD = MY
      LOLD = L
      RETURN
      END
