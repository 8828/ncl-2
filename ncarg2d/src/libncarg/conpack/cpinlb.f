C
C $Id: cpinlb.f,v 1.4 1994-09-12 22:10:32 kennison Exp $
C
      SUBROUTINE CPINLB (ZDAT,RWRK,IWRK,IACT,IAMA)
C
      DIMENSION ZDAT(IZD1,*),RWRK(*),IWRK(*),IAMA(*)
C
C CPINLB generates the informational label.  If IACT = 1, the quantities
C defining the label are added to the lists in real workspaces 3 and 4.
C If IACT = 2, the label is plotted.  If IACT = 3, the label box is
C added to the area map in IAMA.
C
C
C Declare all of the CONPACK common blocks.
C
C
C CPCOM1 contains integer and real variables.
C
      COMMON /CPCOM1/ ANCF,ANHL,ANIL,ANLL,CDMX,CHWM,CINS,CINT(10)
      COMMON /CPCOM1/ CINU,CLDB(256),CLDL(256),CLDR(256)
      COMMON /CPCOM1/ CLDT(256),CLEV(256),CLWA(259),CXCF
      COMMON /CPCOM1/ CXIL,CYCF,CYIL,DBLF,DBLM,DBLN,DBLV,DFLD,DOPT
      COMMON /CPCOM1/ EPSI,FNCM,GRAV,GRSD,GSDM,HCHL,HCHS,IAIA(259)
      COMMON /CPCOM1/ IAIB(256),IBCF,IBHL,IBIL,IBLL,ICAF,ICCF
      COMMON /CPCOM1/ ICCL(259),ICFF,ICHI,ICHL,ICIL,ICLL(256)
      COMMON /CPCOM1/ ICLO,ICLP(256),ICLS,ICLU(259),ICLV,ICLW
      COMMON /CPCOM1/ IDUF,IGCL,IGLB,IGRM,IGRN,IGVS,IHCF,IHLX,IHLY
      COMMON /CPCOM1/ IIWS(2),IIWU,ILBC,IMPF,INCX(8),INCY(8)
      COMMON /CPCOM1/ INHL,INIL,INIT,INLL,IOCF,IOHL,IOLL,IPAI,IPCF
      COMMON /CPCOM1/ IPIC,IPIE,IPIL,IPLL,IRWS(4),IRWU,ISET,IWSO
      COMMON /CPCOM1/ IZD1,IZDM,IZDN,IZDS,JODP,JOMA,JOTZ,LCTM,LEA1
      COMMON /CPCOM1/ LEA2,LEA3,LEE1,LEE2,LEE3,LINS,LINT(10),LINU
      COMMON /CPCOM1/ LIWK,LIWM,LIWS(2),LNLG,LRWC,LRWG,LRWK
      COMMON /CPCOM1/ LRWM,LRWS(4),LSDD,LSDL,LSDM,LTCF,LTHI
      COMMON /CPCOM1/ LTIL,LTLO,MIRO,NCLB(256),NCLV,NDGL,NEXL
      COMMON /CPCOM1/ NEXT,NEXU,NLBS,NLSD,NLZF,NOMF,NOVS,NR04,NSDL
      COMMON /CPCOM1/ NSDR,OORV,PITH,SCFS,SCFU,SEGL,SVAL,T2DS,T3DS
      COMMON /CPCOM1/ UCMN,UCMX,UVPB,UVPL,UVPR,UVPS,UVPT,UWDB,UWDL
      COMMON /CPCOM1/ UWDR,UWDT,UXA1,UXAM,UYA1,UYAN,WCCF,WCHL,WCIL
      COMMON /CPCOM1/ WCLL,WLCF,WLHL,WLIL,WLLL,WOCH,WODA,WTCD,WTGR
      COMMON /CPCOM1/ WTNC,WTOD,WWCF,WWHL,WWIL,WWLL,XAT1,XATM,XLBC
      COMMON /CPCOM1/ XVPL,XVPR,XWDL,XWDR,YAT1,YATN,YLBC,YVPB,YVPT
      COMMON /CPCOM1/ YWDB,YWDT,ZDVL,ZMAX,ZMIN
      EQUIVALENCE (IIWS(1),II01),(LIWS(1),LI01)
      EQUIVALENCE (IIWS(2),II02),(LIWS(2),LI02)
      EQUIVALENCE (IRWS(1),IR01),(LRWS(1),LR01)
      EQUIVALENCE (IRWS(2),IR02),(LRWS(2),LR02)
      EQUIVALENCE (IRWS(3),IR03),(LRWS(3),LR03)
      EQUIVALENCE (IRWS(4),IR04),(LRWS(4),LR04)
      SAVE   /CPCOM1/
C
C CPCOM2 holds character parameters.
C
      COMMON /CPCOM2/ CHEX,CLBL(256),CLDP(259),CTMA,CTMB,FRMT
      COMMON /CPCOM2/ TXCF,TXHI,TXIL,TXLO
      CHARACTER*13 CHEX
      CHARACTER*64 CLBL
      CHARACTER*128 CLDP
      CHARACTER*500 CTMA,CTMB
      CHARACTER*8 FRMT
      CHARACTER*64 TXCF
      CHARACTER*32 TXHI
      CHARACTER*128 TXIL
      CHARACTER*32 TXLO
      SAVE   /CPCOM2/
C
C Declare local arrays to hold coordinates for area fill of boxes.
C
      DIMENSION BFXC(4),BFYC(4)
C
C Define a local array to receive some information we don't care about
C from the GKS routine GQCLIP.
C
      DIMENSION DUMI(4)
C
C If the text string for the informational label is blank, do nothing.
C
      IF (TXIL(1:LTIL).EQ.' ') RETURN
C
C Otherwise, form the informational label ...
C
      CALL CPSBST (TXIL(1:LTIL),CTMA,LCTM)
C
C ... get sizing information for the label ...
C
      XPFS=XVPL+CXIL*(XVPR-XVPL)
      YPFS=YVPB+CYIL*(YVPT-YVPB)
      XLBC=CFUX(XPFS)
      IF (ICFELL('CPINLB',1).NE.0) RETURN
      YLBC=CFUY(YPFS)
      IF (ICFELL('CPINLB',2).NE.0) RETURN
      WCFS=CHWM*WCIL*(XVPR-XVPL)
      WWFS=CHWM*WWIL*(XVPR-XVPL)
C
      CALL PCGETI ('TE',ITMP)
      IF (ICFELL('CPINLB',3).NE.0) RETURN
      CALL PCSETI ('TE',1)
      IF (ICFELL('CPINLB',4).NE.0) RETURN
      CALL CPCHIL (+1)
      IF (ICFELL('CPINLB',5).NE.0) RETURN
      CALL PLCHHQ (XLBC,YLBC,CTMA(1:LCTM),WCFS,360.,0.)
      IF (ICFELL('CPINLB',6).NE.0) RETURN
      CALL CPCHIL (-1)
      IF (ICFELL('CPINLB',7).NE.0) RETURN
      CALL PCGETR ('DL',DSTL)
      IF (ICFELL('CPINLB',8).NE.0) RETURN
      CALL PCGETR ('DR',DSTR)
      IF (ICFELL('CPINLB',9).NE.0) RETURN
      CALL PCGETR ('DB',DSTB)
      IF (ICFELL('CPINLB',10).NE.0) RETURN
      CALL PCGETR ('DT',DSTT)
      IF (ICFELL('CPINLB',11).NE.0) RETURN
      CALL PCSETI ('TE',ITMP)
      IF (ICFELL('CPINLB',12).NE.0) RETURN
      DSTL=DSTL+WWFS
      DSTR=DSTR+WWFS
      DSTB=DSTB+WWFS
      DSTT=DSTT+WWFS
C
C ... and then take the desired action, either putting information
C about the label into the lists or plotting it.
C
      SINA=SIN(.017453292519943*ANIL)
      COSA=COS(.017453292519943*ANIL)
C
      IXPO=MOD(IPIL+4,3)-1
C
      IF (IXPO.LT.0) THEN
        XPFS=XPFS+DSTL*COSA
        YPFS=YPFS+DSTL*SINA
      ELSE IF (IXPO.GT.0) THEN
        XPFS=XPFS-DSTR*COSA
        YPFS=YPFS-DSTR*SINA
      END IF
C
      IYPO=(IPIL+4)/3-1
C
      IF (IYPO.LT.0) THEN
        XPFS=XPFS-DSTB*SINA
        YPFS=YPFS+DSTB*COSA
      ELSE IF (IYPO.GT.0) THEN
        XPFS=XPFS+DSTT*SINA
        YPFS=YPFS-DSTT*COSA
      END IF
C
      XLBC=CFUX(XPFS)
      IF (ICFELL('CPINLB',13).NE.0) RETURN
      YLBC=CFUY(YPFS)
      IF (ICFELL('CPINLB',14).NE.0) RETURN
C
      IF (IACT.EQ.1) THEN
        NLBS=NLBS+1
        IF (4*NLBS.GT.LR03) THEN
          CALL CPGRWS (RWRK,3,MAX(4*NLBS,LR03+100),IWSE)
          IF (IWSE.NE.0.OR.ICFELL('CPINLB',15).NE.0) THEN
            NLBS=NLBS-1
            RETURN
          END IF
        END IF
        RWRK(IR03+4*(NLBS-1)+1)=XPFS
        RWRK(IR03+4*(NLBS-1)+2)=YPFS
        RWRK(IR03+4*(NLBS-1)+3)=.017453292519943*ANIL
        RWRK(IR03+4*(NLBS-1)+4)=-NR04
        NR04=NR04+6
        IF (NR04.GT.LR04) THEN
          CALL CPGRWS (RWRK,4,MAX(NR04,LR04+100),IWSE)
          IF (IWSE.NE.0.OR.ICFELL('CPINLB',16).NE.0) THEN
            NLBS=NLBS-1
            RETURN
          END IF
        END IF
        RWRK(IR04+NR04-5)=0.
        RWRK(IR04+NR04-4)=0.
        RWRK(IR04+NR04-3)=DSTL
        RWRK(IR04+NR04-2)=DSTR
        RWRK(IR04+NR04-1)=DSTB
        RWRK(IR04+NR04  )=DSTT
      ELSE IF (IACT.EQ.2) THEN
        IF (MOD(IBIL/2,2).NE.0) THEN
          JLBC=ILBC
          IF (JLBC.GE.0) THEN
            CALL GQFACI (IGER,ISFC)
            IF (IGER.NE.0) THEN
              CALL SETER ('CPINLB - ERROR EXIT FROM GQFACI',17,1)
              RETURN
            END IF
            IF (ISFC.NE.JLBC) CALL GSFACI (JLBC)
          END IF
          CALL CPCHIL (+2)
          IF (ICFELL('CPINLB',18).NE.0) RETURN
          BFXC(1)=CFUX(XPFS-DSTL*COSA+DSTB*SINA)
          IF (ICFELL('CPINLB',19).NE.0) RETURN
          BFYC(1)=CFUY(YPFS-DSTL*SINA-DSTB*COSA)
          IF (ICFELL('CPINLB',20).NE.0) RETURN
          BFXC(2)=CFUX(XPFS+DSTR*COSA+DSTB*SINA)
          IF (ICFELL('CPINLB',21).NE.0) RETURN
          BFYC(2)=CFUY(YPFS+DSTR*SINA-DSTB*COSA)
          IF (ICFELL('CPINLB',22).NE.0) RETURN
          BFXC(3)=CFUX(XPFS+DSTR*COSA-DSTT*SINA)
          IF (ICFELL('CPINLB',23).NE.0) RETURN
          BFYC(3)=CFUY(YPFS+DSTR*SINA+DSTT*COSA)
          IF (ICFELL('CPINLB',24).NE.0) RETURN
          BFXC(4)=CFUX(XPFS-DSTL*COSA-DSTT*SINA)
          IF (ICFELL('CPINLB',25).NE.0) RETURN
          BFYC(4)=CFUY(YPFS-DSTL*SINA+DSTT*COSA)
          IF (ICFELL('CPINLB',26).NE.0) RETURN
          CALL GFA (4,BFXC,BFYC)
          CALL CPCHIL (-2)
          IF (ICFELL('CPINLB',27).NE.0) RETURN
          IF (JLBC.GE.0) THEN
            IF (ISFC.NE.JLBC) CALL GSFACI (ISFC)
          END IF
        END IF
        CALL GQPLCI (IGER,ISLC)
        IF (IGER.NE.0) THEN
          CALL SETER ('CPINLB - ERROR EXIT FROM GQPLCI',28,1)
          RETURN
        END IF
        CALL GQTXCI (IGER,ISTC)
        IF (IGER.NE.0) THEN
          CALL SETER ('CPINLB - ERROR EXIT FROM GQTXCI',29,1)
          RETURN
        END IF
        IF (ICIL.GE.0) THEN
          JCIL=ICIL
        ELSE
          JCIL=ISTC
        END IF
        JSLC=ISLC
        JSTC=ISTC
        IF (JSLC.NE.JCIL) THEN
          CALL PLOTIF (0.,0.,2)
          IF (ICFELL('CPINLB',30).NE.0) RETURN
          CALL GSPLCI (JCIL)
          JSLC=JCIL
        END IF
        IF (JSTC.NE.JCIL) THEN
          CALL GSTXCI (JCIL)
          JSTC=JCIL
        END IF
        CALL GQCLIP (IGER,IGCF,DUMI)
        IF (IGER.NE.0) THEN
          CALL SETER ('CPINLB - ERROR EXIT FROM GQCLIP',31,1)
          RETURN
        END IF
        IF (IGCF.NE.0) THEN
          CALL PLOTIF (0.,0.,2)
          IF (ICFELL('CPINLB',32).NE.0) RETURN
          CALL GSCLIP (0)
        END IF
        CALL CPCHIL (+3)
        IF (ICFELL('CPINLB',33).NE.0) RETURN
        CALL PLCHHQ (XLBC,YLBC,CTMA(1:LCTM),WCFS,ANIL,0.)
        IF (ICFELL('CPINLB',34).NE.0) RETURN
        CALL CPCHIL (-3)
        IF (ICFELL('CPINLB',35).NE.0) RETURN
        IF (IGCF.NE.0) THEN
          CALL PLOTIF (0.,0.,2)
          IF (ICFELL('CPINLB',36).NE.0) RETURN
          CALL GSCLIP (IGCF)
        END IF
        IF (MOD(IBIL,2).NE.0) THEN
          WDTH=WLIL
          IF (WDTH.GT.0.) THEN
            CALL GQLWSC (IGER,SFLW)
            IF (IGER.NE.0) THEN
              CALL SETER ('CPINLB - ERROR EXIT FROM GQLWSC',37,1)
              RETURN
            END IF
            CALL PLOTIF (0.,0.,2)
            IF (ICFELL('CPINLB',38).NE.0) RETURN
            CALL GSLWSC (WDTH)
          END IF
          CALL CPCHIL (+4)
          IF (ICFELL('CPINLB',39).NE.0) RETURN
          CALL PLOTIF (XPFS-DSTL*COSA+DSTB*SINA,
     +                 YPFS-DSTL*SINA-DSTB*COSA,0)
          IF (ICFELL('CPINLB',40).NE.0) RETURN
          CALL PLOTIF (XPFS+DSTR*COSA+DSTB*SINA,
     +                 YPFS+DSTR*SINA-DSTB*COSA,1)
          IF (ICFELL('CPINLB',41).NE.0) RETURN
          CALL PLOTIF (XPFS+DSTR*COSA-DSTT*SINA,
     +                 YPFS+DSTR*SINA+DSTT*COSA,1)
          IF (ICFELL('CPINLB',42).NE.0) RETURN
          CALL PLOTIF (XPFS-DSTL*COSA-DSTT*SINA,
     +                 YPFS-DSTL*SINA+DSTT*COSA,1)
          IF (ICFELL('CPINLB',43).NE.0) RETURN
          CALL PLOTIF (XPFS-DSTL*COSA+DSTB*SINA,
     +                 YPFS-DSTL*SINA-DSTB*COSA,1)
          IF (ICFELL('CPINLB',44).NE.0) RETURN
          CALL PLOTIF (0.,0.,2)
          IF (ICFELL('CPINLB',45).NE.0) RETURN
          CALL CPCHIL (-4)
          IF (ICFELL('CPINLB',46).NE.0) RETURN
          IF (WDTH.GT.0.) THEN
            CALL PLOTIF (0.,0.,2)
            IF (ICFELL('CPINLB',47).NE.0) RETURN
            CALL GSLWSC (SFLW)
          END IF
        END IF
        IF (ISLC.NE.JSLC) THEN
          CALL PLOTIF (0.,0.,2)
          IF (ICFELL('CPINLB',48).NE.0) RETURN
          CALL GSPLCI (ISLC)
        END IF
        IF (ISTC.NE.JSTC) CALL GSTXCI (ISTC)
      ELSE
        CALL CPGRWS (RWRK,1,10,IWSE)
        IF (IWSE.NE.0.OR.ICFELL('CPINLB',49).NE.0) RETURN
        ANLB=.017453292519943*ANIL
        SALB=SIN(ANLB)
        CALB=COS(ANLB)
        RWRK(IR01+ 1)=CFUX(XPFS-DSTL*CALB+DSTB*SALB)
        IF (ICFELL('CPINLB',50).NE.0) RETURN
        RWRK(IR01+ 2)=CFUX(XPFS+DSTR*CALB+DSTB*SALB)
        IF (ICFELL('CPINLB',51).NE.0) RETURN
        RWRK(IR01+ 3)=CFUX(XPFS+DSTR*CALB-DSTT*SALB)
        IF (ICFELL('CPINLB',52).NE.0) RETURN
        RWRK(IR01+ 4)=CFUX(XPFS-DSTL*CALB-DSTT*SALB)
        IF (ICFELL('CPINLB',53).NE.0) RETURN
        RWRK(IR01+ 5)=RWRK(IR01+1)
        RWRK(IR01+ 6)=CFUY(YPFS-DSTL*SALB-DSTB*CALB)
        IF (ICFELL('CPINLB',54).NE.0) RETURN
        RWRK(IR01+ 7)=CFUY(YPFS+DSTR*SALB-DSTB*CALB)
        IF (ICFELL('CPINLB',55).NE.0) RETURN
        RWRK(IR01+ 8)=CFUY(YPFS+DSTR*SALB+DSTT*CALB)
        IF (ICFELL('CPINLB',56).NE.0) RETURN
        RWRK(IR01+ 9)=CFUY(YPFS-DSTL*SALB+DSTT*CALB)
        IF (ICFELL('CPINLB',57).NE.0) RETURN
        RWRK(IR01+10)=RWRK(IR01+6)
        IF ((XWDL.LT.XWDR.AND.YWDB.LT.YWDT).OR.(XWDL.GT.XWDR.AND.YWDB.GT
     +.YWDT)) THEN
          CALL AREDAM (IAMA,RWRK(IR01+1),RWRK(IR01+6),5,IGLB,-1,0)
          IF (ICFELL('CPINLB',58).NE.0) RETURN
        ELSE
          CALL AREDAM (IAMA,RWRK(IR01+1),RWRK(IR01+6),5,IGLB,0,-1)
          IF (ICFELL('CPINLB',59).NE.0) RETURN
        END IF
        LR01=0
      END IF
C
C Done.
C
      RETURN
C
      END
