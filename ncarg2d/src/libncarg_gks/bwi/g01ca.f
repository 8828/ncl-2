C
C	$Id: g01ca.f,v 1.1.1.1 1992-04-17 22:33:56 ncargd Exp $
C
      SUBROUTINE G01CA
C
C  PROCESS GKS CELL ARRAY INSTRUCTION, PUT OUT CGM CELL ARRAY.
C
      COMMON /GKSIN1/FCODE,CONT,IL1,IL2,ID(128),RL1,RL2,RX(128),
     - RY(128),STRL1,STRL2,RERR
      COMMON /GKSIN2/STR
      INTEGER FCODE, CONT, IL1, IL2, ID, RL1, RL2
      INTEGER STRL1, STRL2, RERR
      REAL  RX, RY
      CHARACTER*80 STR
      COMMON  /G01IO/   MIOFLG  ,MRECNM ,MPXYSZ ,MPXPY(256)     ,
     +                  MOBFSZ  ,MOUTBF(720)    ,MBFPOS ,
     +                  MFGLUN  ,MXBITS         ,MDTYPE ,
     +                  MNFFLG  ,MBMFLG ,MEMFLG
        INTEGER         MIOFLG  ,MRECNM ,MPXYSZ ,MPXPY  ,MOBFSZ ,
     +                  MBFPOS  ,MFGLUN ,MOUTBF ,MXBITS ,MDTYPE ,
     +                  MNFFLG  ,MBMFLG ,MEMFLG
      COMMON  /G01CHA/  MFNAME  ,MPNAME
      CHARACTER*80      MFNAME  ,MPNAME
      COMMON  /G01INS/  MCODES  ,MCONTS ,
     +                  MVDCFW  ,MCIXFW ,MDCCFW ,MIXFW  ,MINTFW ,
     +                  MDCCRG  ,MXOFF  ,MXSCAL ,MYOFF  ,MYSCAL ,
     +                  MINXVD  ,MAXXVD ,MINYVD ,MAXYVD ,
     +                  MCFRM   ,MCOPCL ,MCOPID ,MCNBYT ,
     +                  MCCBYT  ,MCFPP  ,MSLFMT ,MEFW   ,MCTCHG ,
     +                  MBCCHG
        INTEGER         MCODES  ,MCONTS
        INTEGER         MVDCFW  ,MCIXFW ,MDCCFW ,MIXFW  ,MINTFW
        INTEGER         MDCCRG  ,MXOFF  ,MXSCAL ,MYOFF  ,MYSCAL
        INTEGER         MINXVD  ,MAXXVD ,MINYVD ,MAXYVD
        INTEGER         MCFRM   ,MCOPCL ,MCOPID ,MCNBYT
        INTEGER         MCCBYT  ,MCFPP  ,MSLFMT ,MEFW   ,MCTCHG
        INTEGER         MBCCHG
      COMMON  /G01WSL/  MWKID   ,MCONID ,MWTYPE ,MSTATE ,MOPEN  ,
     +                  MDEFMO  ,MREGMO ,MDEMPT ,MNFRAM ,MTUS   ,
     +                  RWINDO(4)       ,CWINDO(4)      ,
     +                  RWKVP (4)       ,CWKVP (4)      ,
     +                  MOLMAX  ,MOL    ,MCOVFL ,MCSORT ,MCOLI(256),
     +                  SRED(256)       ,SGREEN(256)    ,SBLUE(256),
     +                  MRCREC(4)       ,MRCLIP
        INTEGER         MWKID   ,MCONID ,MWTYPE ,MSTATE ,MOPEN
        INTEGER         MDEFMO  ,MREGMO ,MDEMPT ,MNFRAM ,MTUS
        INTEGER         MOLMAX  ,MOL    ,MCOVFL ,MCSORT ,MCOLI
        REAL            RWINDO          ,CWINDO
        REAL            RWKVP           ,CWKVP
        REAL            SRED            ,SGREEN         ,SBLUE
        INTEGER         MRCREC  ,MRCLIP
      COMMON /GKSENU/ GYES,  GNO,   GCONDI, GALWAY, GACTIV, GINACT
      COMMON /GKSENU/ GEMPTY,GNEMPT,GPEND,  GNPEND, GCLIP , GNCLIP
C
      INTEGER         GYES,  GNO,   GCONDI, GALWAY, GACTIV, GINACT
      INTEGER         GEMPTY,GNEMPT,GPEND,  GNPEND, GCLIP , GNCLIP
C
C  Id code parameters for every element, and class codes for each class.
C
      COMMON /G01OPC/ IDNOOP, IDBEGM, IDENDM, IDBEGP, IDBGPB, IDENDP
      COMMON /G01OPC/ IDMVER, IDMELT, IDDREP, IDCSEL, IDVEXT, IDVINT
      COMMON /G01OPC/ IDCREC, IDCLIN, IDPLIN, IDPMRK, IDTEXT, IDPGON
      COMMON /G01OPC/ IDCARY, IDGDP,  IDLBIX, IDLTYP, IDLWID, IDLCLR
      COMMON /G01OPC/ IDMBIX, IDMTYP, IDMSIZ, IDMCLR, IDTBIX, IDTFON
      COMMON /G01OPC/ IDTPRE, IDCHEX, IDCHSP, IDTCLR, IDCHHT, IDCHOR
      COMMON /G01OPC/ IDTXPA, IDTXAL, IDFBIX, IDINTS, IDFCLR, IDHAIX
      COMMON /G01OPC/ IDPTIX, IDFRPT, IDPTBL, IDPTSZ, IDCTBL, IDASFS
      COMMON /G01OPC/ IDESC,  IDMESS, IDAPLD, IDBKGC, IDDSCR, IDFLST
      COMMON /G01OPC/ CLDELM, CLMDES, CLPDES, CLCNTL, CLPRIM, CLPRAT
      COMMON /G01OPC/ CLESCE, CLEXTE
C
C  Parameter data types.
C
      INTEGER         IDNOOP, IDBEGM, IDENDM, IDBEGP, IDBGPB, IDENDP
      INTEGER         IDMVER, IDMELT, IDDREP, IDCSEL, IDVEXT, IDVINT
      INTEGER         IDCREC, IDCLIN, IDPLIN, IDPMRK, IDTEXT, IDPGON
      INTEGER         IDCARY, IDGDP,  IDLBIX, IDLTYP, IDLWID, IDLCLR
      INTEGER         IDMBIX, IDMTYP, IDMSIZ, IDMCLR, IDTBIX, IDTFON
      INTEGER         IDTPRE, IDCHEX, IDCHSP, IDTCLR, IDCHHT, IDCHOR
      INTEGER         IDTXPA, IDTXAL, IDFBIX, IDINTS, IDFCLR, IDHAIX
      INTEGER         IDPTIX, IDFRPT, IDPTBL, IDPTSZ, IDCTBL, IDASFS
      INTEGER         IDESC,  IDMESS, IDAPLD, IDBKGC, IDDSCR, IDFLST
      INTEGER         CLDELM, CLMDES, CLPDES, CLCNTL, CLPRIM, CLPRAT
      INTEGER         CLESCE, CLEXTE
C
C Class code parameters for every element.
C
      INTEGER         CLNOOP, CLBEGM, CLENDM, CLBEGP, CLBGPB, CLENDP
      INTEGER         CLMVER, CLMELT, CLDREP, CLCSEL, CLVEXT, CLVINT
      INTEGER         CLCREC, CLCLIN, CLPLIN, CLPMRK, CLTEXT, CLPGON
      INTEGER         CLCARY, CLGDP,  CLLBIX, CLLTYP, CLLWID, CLLCLR
      INTEGER         CLMBIX, CLMTYP, CLMSIZ, CLMCLR, CLTBIX, CLTFON
      INTEGER         CLTPRE, CLCHEX, CLCHSP, CLTCLR, CLCHHT, CLCHOR
      INTEGER         CLTXPA, CLTXAL, CLFBIX, CLINTS, CLFCLR, CLHAIX
      INTEGER         CLPTIX, CLFRPT, CLPTBL, CLPTSZ, CLCTBL, CLASFS
      INTEGER         CLESC,  CLMESS, CLAPLD, CLBKGC, CLDSCR, CLFLST
C
C  Equivalence all individual class code parameters to the single
C  code for the class in which the element(s) belong.
C
      EQUIVALENCE (CLDELM, CLNOOP,CLBEGM,CLENDM,CLBEGP,CLBGPB,CLENDP)
      EQUIVALENCE (CLMDES, CLMVER,CLMELT,CLDREP,CLDSCR,CLFLST)
      EQUIVALENCE (CLPDES, CLCSEL,CLVEXT,CLBKGC)
      EQUIVALENCE (CLCNTL, CLVINT,CLCREC,CLCLIN)
      EQUIVALENCE (CLPRIM, CLPLIN,CLPMRK,CLTEXT,CLPGON,CLCARY,CLGDP)
      EQUIVALENCE (CLPRAT, CLLBIX,CLLTYP,CLLWID,CLLCLR,CLMBIX,CLMTYP)
      EQUIVALENCE (CLPRAT, CLMSIZ,CLMCLR,CLTBIX,CLTFON,CLTPRE,CLCHEX)
      EQUIVALENCE (CLPRAT, CLCHSP,CLTCLR,CLCHHT,CLCHOR,CLTXPA,CLTXAL)
      EQUIVALENCE (CLPRAT, CLFBIX,CLINTS,CLFCLR,CLHAIX,CLPTIX,CLFRPT)
      EQUIVALENCE (CLPRAT, CLPTBL,CLPTSZ,CLCTBL,CLASFS)
      EQUIVALENCE (CLESCE, CLESC), (CLEXTE, CLMESS,CLAPLD)
C
      INTEGER  DX, DY, KALL, NBYPCW, ROWLEN, ROWPAD, NBYTES
      INTEGER  NBYTE1, NBYTE2, GPAD, GDFCP, GNORUN
      INTEGER  CARPOS, ROWPOS, IDPOS, NCLOUT, NBPROW, IX
C
      SAVE
C
      DATA  KALL/0/,  NBYPCW/2/,  GPAD/0/,  GDFCP/0/,  GNORUN/1/
C
      KALL = KALL+1
      IF (KALL .EQ. 1) THEN
C
C     TREAT FIRST CASE (SET-UP CALL, ONLY P,Q,DX,DY PASSED,
C     FIRST COLOR INDICES NOT PASSED TILL SECOND CALL)
C
C       SET WSL ENTRY "DISPLAY SURFACE EMPTY" TO "NOT EMPTY"
C
        MDEMPT = GNEMPT
C
C       TRANSFORM P AND Q CORNER POINTS TO VDC, GENERATE THE
C       THE R CORNER POINT, STORE ALL IN MPXPY.
C
        MPXPY(1) = MXOFF+IFIX(FLOAT(MXSCAL)*RX(1))
        MPXPY(2) = MXOFF+IFIX(FLOAT(MYSCAL)*RY(1))
        MPXPY(3) = MYOFF+IFIX(FLOAT(MXSCAL)*RX(2))
        MPXPY(4) = MYOFF+IFIX(FLOAT(MYSCAL)*RY(2))
        MPXPY(5) = MPXPY(3)
        MPXPY(6) = MPXPY(2)
C
C       SAVE DX,DY FOR SUBSEQUENT CALLS.
C
        DX = ID(1)
        DY = ID(2)
C
C       COMPUTE TOTAL BYTE LENGTH -- ROWS MUST ALL START ON
C       CGM WORD BOUNDARIES, INCLUDING THE FIRST ROW.
C
C       BYTE COUNT FOR P,Q,R POINTS, DX,DY, LOCAL COLOR PRECISION,
C       RUN-LENGTH/PACKED FLAG, ROUND TO NEAREST CGM METAFILE WORD.
C
        NBYTE1 = 1 + (6*MVDCFW + 2*MINTFW + MINTFW + MEFW -1)/8
        NBYTE2 = NBYPCW*( 1 + (NBYTE1-1)/NBYPCW )
C
C       NUMBER OF BYTES TO HOLD A ROW OF COLOR INDEXES, ROUND TO
C       CGM WORD BOUNDARY, COMPUTE PADDING BYTES PER ROW (IF ANY).
C
        NBPROW = 1 + (DX*MCIXFW-1)/8
        ROWLEN = NBYPCW*( 1 + (NBPROW-1)/NBYPCW )
        ROWPAD = ROWLEN - NBPROW
C
C       TOTAL BYTE LENGTH OF CELL ARRAY ELEMENT.
C
        NBYTES = NBYTE2 + DY*ROWLEN
C
C       PUT OUT OPCODE (CLASS AND ID) AND TOTAL LENGTH.
C
        CALL GPUTNI (CLCARY, IDCARY, NBYTES, RERR)
C
C       PUT OUT P, Q, R POINTS.
C
        CALL GPUTPR (MPXPY, MVDCFW, 6, RERR)
C
C       PUT OUT DX AND DY, LOCAL COLOR PRECISION, PACKED/RUN-LENGTH FLG.
C
        CALL GPUTPR (ID, MINTFW, 2, RERR)
        CALL GPUTPR (GDFCP,  MINTFW, 1, RERR)
        CALL GPUTPR (GNORUN, MEFW, 1, RERR)
C
C       PAD TO START OF FIRST ROW IF NECESSARY.
C
        IF (NBYTE1 .LT. NBYTE2)  THEN
           DO 10 IX=1, (NBYTE2-NBYTE1)
              CALL GPUTPR (GPAD, 8, 1, RERR)
 10        CONTINUE
        END IF
C
        IF (RERR .NE. 0) RETURN
C
C       INITIALIZE POINTER INTO CELL ARRAY AND POINTER INTO CURRENT ROW.
C
        CARPOS = 1
        ROWPOS = 1
C
C       PROCESSING OF FIRST CALL IS COMPLETE
C
      END IF
C
C     TREAT THE CONTINUATION CALLS (THE COLOR INDEX ARRAY)
C
      IF (KALL .GT. 1) THEN
C
C        INITIALIZE POINTER INTO CURRENT CHUNK OF CELL ARRAY.
C
         IDPOS  = 1
C
 20      CONTINUE
C
C           NBR OF CELLS TO PUT OUT, TO END OF CURRENT ROW OR
C           ALL CELLS REMAINING, WHICHEVER IS LESS.
C
            NCLOUT = MIN0 (DX-ROWPOS+1, IL2-IDPOS+1)
            CALL GPUTPR (ID(IDPOS), MCIXFW, NCLOUT, RERR)
            IF (RERR.NE.0)  RETURN
C
C           UPDATE ROW POSITION, PAD TO CGM WORD BOUNDARY IF
C           JUST COMPLETED A ROW (NEXT GPUTPR STARTS NEW ROW).
C
            ROWPOS = ROWPOS + NCLOUT
            IF (ROWPOS.GT.DX)  ROWPOS = 1
            IF (ROWPAD.GT.0 .AND. ROWPOS.EQ.1)  THEN
               DO 30 IX=1, ROWPAD
                  CALL GPUTPR (GPAD, 8, 1, RERR)
 30            CONTINUE
            END IF
C
C           UPDATE POSITION IN INDEX ARRAY.
C
            IDPOS  = IDPOS  + NCLOUT
C
C           GO BACK TO PROCESS NEXT ROW (OR PARTIAL ROW) IF MORE
C           CELLS REMAIN THIS CALL.
C
         IF (IDPOS.LE.IL2)  GOTO 20
C
      END IF
C
      IF (CONT.EQ.0)  KALL=0
C
      RETURN
C
      END
