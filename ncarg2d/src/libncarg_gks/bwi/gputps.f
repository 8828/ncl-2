C
C	$Id: gputps.f,v 1.1.1.1 1992-04-17 22:34:01 ncargd Exp $
C
      SUBROUTINE GPUTPS (BUFFER, COUNT1, COUNT2, CONTIN, GKSERR)
C
C  PUT CHARACTER STRING (TYPE CHARACTER) INTO THE METAFILE BUFFER
C
C  INPUT
C       BUFFER-CHARACTER STRING TO MOVE, MUST BE TYPE CHARACTER
C       COUNT1-TOTAL NUMBER OF CHARACTERS TO BE PROCESSED ENTIRE SEQUENCE
C       COUNT2-NUMBER OF CHARACTERS TO BE PROCESS THIS CALL
C       CONTIN-IF 0, COUNT1 IS PUT OUT PRIOR TO THE STRING ITSELF;
C              IF 1, ONLY THE CHARACTER STRING IS PUT OUT.
C  OUTPUT
C       GKSERR-ERROR STATUS
C
C  ALL DATA IS TYPE INTEGER UNLESS OTHERWISE INDICATED
C
      IMPLICIT INTEGER (A-Z)
      DIMENSION CHARS(256)
      CHARACTER*(*) BUFFER
C
      INTEGER  BITSPC
      INTEGER  GKASCI
C
C  OPERAND AND INSTRUCTION COMMUNICATION
C
      COMMON  /G01INS/  MCODES  ,MCONTS ,
     +                  MVDCFW  ,MCIXFW ,MDCCFW ,MIXFW  ,MINTFW ,
     +                  MDCCRG  ,MXOFF  ,MXSCAL ,MYOFF  ,MYSCAL ,
     +                  MINXVD  ,MAXXVD ,MINYVD ,MAXYVD ,
     +                  MCFRM   ,MCOPCL ,MCOPID ,MCNBYT ,
     +                  MCCBYT  ,MCFPP  ,MSLFMT ,MEFW   ,MCTCHG ,
     +                  MBCCHG
        INTEGER         MCODES  ,MCONTS
        INTEGER         MVDCFW  ,MCIXFW ,MDCCFW ,MIXFW  ,MINTFW
        INTEGER         MDCCRG  ,MXOFF  ,MXSCAL ,MYOFF  ,MYSCAL
        INTEGER         MINXVD  ,MAXXVD ,MINYVD ,MAXYVD
        INTEGER         MCFRM   ,MCOPCL ,MCOPID ,MCNBYT
        INTEGER         MCCBYT  ,MCFPP  ,MSLFMT ,MEFW   ,MCTCHG
        INTEGER         MBCCHG
      SAVE
C
C  MAX NUMBER OF CHARACTERS TO TEMP BUFFER
C
      DATA  MXCH/256/
C
C  CGM METAFILE USES ASCII, 8 BITS PER CHARACTER CODE.
C
      DATA  BITSPC/8/,  LSFLG/255/
C
C  FIRST CALL PROCESSING, SET UP COUNT (OR FLAG/COUNT).
C
      IF (CONTIN.EQ.0)  THEN
C       NUMBER OF BITS FOR PARAMETER, COUNT+STRING, DEPENDS ON
C       WHETHER STRING IS LONG OR SHORT FORM.
         IF (COUNT1.LE.254)  THEN
            NBCCNT = 8
         ELSE
            NBCCNT = 16
            CALL GMFLOD (LSFLG, 8, 1, GKSERR)
            IF (GKSERR.NE.0)  RETURN
         END IF
         CALL GMFLOD (COUNT1, NBCCNT, 1, GKSERR)
         IF (GKSERR.NE.0)  RETURN
      END IF
C
      CTEMP = COUNT2
      STRT = 1
C
 10   CONTINUE
C
C  DETERMINE THE NUMBER OF CHARACTERS THAT WILL FIT
C  IN THE CURRENT PARTITION
C
      WCBYT = 1 + (MCCBYT*8-1)/BITSPC
C
C  COMPUTE AND MOVE THE ALLOWED NUMBER OF CHARACTERS.
C
      MOVIT = MIN0(WCBYT,CTEMP,MXCH)
C
C  MOVE THE CHARACTER CODES TO THE INTEGER BUFFER
C
      DO 20 II = 1,MOVIT
        NP = STRT + II - 1
C       GET ASCII EQUIVALENT OF CHARACTER CODE.
        CHARS(II) = GKASCI (ICHAR(BUFFER(NP:NP)))
 20   CONTINUE
      CALL GMFLOD (CHARS, BITSPC, MOVIT, GKSERR)
      IF (GKSERR .NE. 0) RETURN
C
C  CHECK IF ANOTHER PARTITION HAS TO BE STARTED
C
      CTEMP = CTEMP - MOVIT
      MCCBYT = MCCBYT - (MOVIT*BITSPC)/8
      IF (CTEMP .NE. 0) THEN
C
C       CHECK IF MORE ROOM IN PARTITION
C
        IF (MCCBYT .NE. 0) THEN
C
C               MORE ROOM IN THE CURRENT PARTITION
C
                STRT = STRT + MOVIT
        ELSE
C
C               NEW PARTITION REQUIRED SO SET UP THE INSTRUCTION
C
                STRT = STRT + MOVIT
C               TAKE REMAINDER OF BYTES LEFT IN CURRENT PARTITION
C               (THEY MUST BE USED)
                TCBYT = MCNBYT + MCCBYT
                CALL GMPART (TCBYT, GKSERR)
                IF (GKSERR .NE. 0) RETURN
        END IF
C
C       MOVE MORE OPERANDS INTO NEW PARTITION
C
        GO TO 10
      END IF
C
      RETURN
      END
