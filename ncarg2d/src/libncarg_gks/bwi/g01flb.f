C
C	$Id: g01flb.f,v 1.1.1.1 1992-04-17 22:33:57 ncargd Exp $
C
      SUBROUTINE G01FLB(GKSERR)
C
C  WRITE THE METAFILE RECORD OUT TO THE DISK
C
C  OUTPUT
C       GKSERR-THE ERROR STATUS FLAG
C
C  ALL DATA IS TYPE INTEGER UNLESS OTHERWISE INDICATED
C
      IMPLICIT INTEGER (A-Z)
C
      COMMON  /G01IO/   MIOFLG  ,MRECNM ,MPXYSZ ,MPXPY(256)     ,
     +                  MOBFSZ  ,MOUTBF(720)    ,MBFPOS ,
     +                  MFGLUN  ,MXBITS         ,MDTYPE ,
     +                  MNFFLG  ,MBMFLG ,MEMFLG
        INTEGER         MIOFLG  ,MRECNM ,MPXYSZ ,MPXPY  ,MOBFSZ ,
     +                  MBFPOS  ,MFGLUN ,MOUTBF ,MXBITS ,MDTYPE ,
     +                  MNFFLG  ,MBMFLG ,MEMFLG
      COMMON  /G01CHA/  MFNAME  ,MPNAME
      CHARACTER*80      MFNAME  ,MPNAME
C
      DIMENSION  FLAGS(12)
      CHARACTER*1 DNAME
C
C  INITIALIZE FLAGS ARRAY
C
      DATA FLAGS( 1),FLAGS( 2),FLAGS( 3),FLAGS( 4)/0,0,0,0/
      DATA FLAGS( 5),FLAGS( 6),FLAGS( 7),FLAGS( 8)/0,0,0,0/
      DATA FLAGS( 9),FLAGS(10),FLAGS(11),FLAGS(12)/0,0,0,0/
C
C  DEFINE THE ALL OK STATUS, BUFFER RESET POINT, BUFFER WRITE ERROR,
C  CLEAR THE NEW FRAME FLAG
C
      DATA BFREST,CLEAR/32,0/
C
C  SET THE BIT LENGTH FOR ID ID PART OF A RECORD, THE NUMBER OF BITS PER
C  BYTE, THE FIELD SIZE FOR THE RECORD BIT START FOR THE RECORD BYTE
C  LENGTH AND THE FIELD SIZE FOR THE RECORD BYTE LENGTH
C
      DATA IDLEN,BYTSIZ,SIZST,SIZSZ/32,8,0,16/
C
C  SET THE DATA TYPE START BIT IN RECORD, THE DATA TYPE LENGTH ,
C  THE NEW FRAME BIT START BIT, THE NEW FRAME LENGTH
C
      DATA MDTST,MDTSZ,MNFST,MNFSZ/16,4,20,1/
C
C  ENTER THE BYTE COUNT
C
      BCOUNT = (MBFPOS - IDLEN) / BYTSIZ
C
C  If the byte count is odd, then the final CGM element has an odd byte
C  count, so we should add a byte for the pad byte.
C
      IF (MOD(BCOUNT,2) .EQ. 1) THEN
        BCOUNT = BCOUNT+1
      ENDIF
C
C  RETURN IF NOTHING IN BUFFER
C
      IF (BCOUNT .LE. 0) RETURN
      CALL SBYTES(MOUTBF,BCOUNT,SIZST,SIZSZ,0,1)
C
C  ENTER THE DATA TYPE ID
C
      CALL SBYTES(MOUTBF,MDTYPE,MDTST,MDTSZ,0,1)
C
C  PUT AWAY NEW FRAME, BEGIN METAFILE, AND END METAFILE BITS,
C  AND THEN CLEAR THEM.
C
      FLAGS(1) = MNFFLG
      FLAGS(2) = MBMFLG
      FLAGS(3) = MEMFLG
      CALL SBYTES(MOUTBF,FLAGS,MNFST,MNFSZ,0,12)
      MNFFLG = CLEAR
      MBMFLG = CLEAR
      MEMFLG = CLEAR
C
C  WRITE OUT THE RECORD
C
      CALL G01MIO (3, MFGLUN, DNAME, MOUTBF, MOBFSZ, GKSERR)
      MRECNM = MRECNM + 1
C
C  RESET THE RECORD POINTER
C
      MBFPOS = BFREST
C
      RETURN
C
      END
