C
C	$Id: gerlog.f,v 1.1.1.1 1992-04-17 22:33:39 ncargd Exp $
C
      SUBROUTINE GERLOG(ERRNR,FCTID,ERRFIL)
C
C  Details on all GKS COMMON variables are in the GKS BLOCKDATA.
      COMMON/GKINTR/ NOPWK , NACWK , WCONID, NUMSEG,
     +               SEGS(100)     , CURSEG
      INTEGER        NOPWK , NACWK , WCONID, NUMSEG, SEGS  , CURSEG
      COMMON/GKOPDT/ OPS   , KSLEV , WK    , LSWK(2)       ,
     +               MOPWK , MACWK , MNT
      INTEGER        OPS   , WK
      COMMON/GKSTAT/ SOPWK(2)      , SACWK(1)      , CPLI  , CLN   ,
     +               CLWSC , CPLCI , CLNA  , CLWSCA, CPLCIA, CPMI  ,
     +               CMK   , CMKS  , CPMCI , CMKA  , CMKSA , CPMCIA,
     +               CTXI  , CTXFP(2)      , CCHXP , CCHSP , CTXCI ,
     +               CTXFPA, CCHXPA, CCHSPA, CTXCIA, CCHH  , CCHUP(2),
     +               CTXP  , CTXAL(2)      , CFAI  , CFAIS , CFASI ,
     +               CFACI , CFAISA, CFASIA, CFACIA, CPA(2), CPARF(2),
     +               CNT   , LSNT(2)       , NTWN(2,4)     , NTVP(2,4),
     +               CCLIP , SWKTP(2)      , NOPICT, NWKTP , MODEF
      INTEGER        SOPWK , SACWK , CPLI  , CLN   , CPLCI , CLNA  ,
     +               CLWSCA, CPLCIA, CPMI  , CMK   , CPMCI , CMKA  ,
     +               CMKSA , CPMCIA, CTXI  , CTXFP , CTXCI , CTXFPA,
     +               CCHXPA, CCHSPA, CTXCIA, CTXP  , CTXAL , CFAI  ,
     +               CFAIS , CFASI , CFACI , CFAISA, CFASIA, CFACIA,
     +               CNT   , LSNT  , CCLIP , SWKTP , NOPICT, NWKTP ,
     +               MODEF
      REAL           NTWN  , NTVP
      COMMON/GKEROR/ ERS   , ERF
      COMMON/GKENUM/ GBUNDL, GINDIV, GGKCL , GGKOP , GWSOP , GWSAC ,
     +               GSGOP , GOUTPT, GINPUT, GOUTIN, GWISS , GMO   ,
     +               GMI
      INTEGER        GBUNDL, GINDIV, GGKCL , GGKOP , GWSOP , GWSAC ,
     +               GSGOP , GOUTPT, GINPUT, GOUTIN, GWISS , GMO   ,
     +               GMI   , ERS   , ERF
      COMMON/GKSNAM/ GNAM(109)
      CHARACTER*6    GNAM
      COMMON/GKSIN1/ FCODE , CONT  , IL1   , IL2   , ID(128)       ,
     +               RL1   , RL2   , RX(128)       , RY(128)       ,
     +               STRL1 , STRL2 , RERR
      COMMON/GKSIN2/ STR
      INTEGER        FCODE , CONT  , RL1   , RL2   , STRL1 , STRL2 ,
     +               RERR
      CHARACTER*80   STR
C
      INTEGER ERRNR,FCTID,ERRFIL
      CHARACTER*52  L1
C
C     WRITE FIRST LINE OF ERROR MESSAGE TO INTERNAL FILE L1
C
      WRITE(L1,700) ERRNR,GNAM(FCTID+1)
  700 FORMAT(' GKS ERROR NUMBER',I4,' ISSUED FROM SUBROUTINE ',A6,':')
      IF (ERRNR.EQ.1) THEN
      WRITE (ERRFIL,  1) L1
      ELSE IF (ERRNR.EQ.2) THEN
      WRITE (ERRFIL,  2) L1
      ELSE IF (ERRNR.EQ.3) THEN
      WRITE (ERRFIL,  3) L1
      ELSE IF (ERRNR.EQ.4) THEN
      WRITE (ERRFIL,  4) L1
      ELSE IF (ERRNR.EQ.5) THEN
      WRITE (ERRFIL,  5) L1
      ELSE IF (ERRNR.EQ.6) THEN
      WRITE (ERRFIL,  6) L1
      ELSE IF (ERRNR.EQ.7) THEN
      WRITE (ERRFIL,  7) L1
      ELSE IF (ERRNR.EQ.8) THEN
      WRITE (ERRFIL,  8) L1
      ELSE IF (ERRNR.EQ.20) THEN
      WRITE (ERRFIL, 20) L1
      ELSE IF (ERRNR.EQ.21) THEN
      WRITE (ERRFIL, 21) L1
      ELSE IF (ERRNR.EQ.22) THEN
      WRITE (ERRFIL, 22) L1
      ELSE IF (ERRNR.EQ.23) THEN
      WRITE (ERRFIL, 23) L1
      ELSE IF (ERRNR.EQ.24) THEN
      WRITE (ERRFIL, 24) L1
      ELSE IF (ERRNR.EQ.25) THEN
      WRITE (ERRFIL, 25) L1
      ELSE IF (ERRNR.EQ.26) THEN
      WRITE (ERRFIL, 26) L1
      ELSE IF (ERRNR.EQ.27) THEN
      WRITE (ERRFIL, 27) L1
      ELSE IF (ERRNR.EQ.29) THEN
      WRITE (ERRFIL, 29) L1
      ELSE IF (ERRNR.EQ.30) THEN
      WRITE (ERRFIL, 30) L1
      ELSE IF (ERRNR.EQ.32) THEN
      WRITE (ERRFIL, 32) L1
      ELSE IF (ERRNR.EQ.33) THEN
      WRITE (ERRFIL, 33) L1
      ELSE IF (ERRNR.EQ.34) THEN
      WRITE (ERRFIL, 34) L1
      ELSE IF (ERRNR.EQ.35) THEN
      WRITE (ERRFIL, 35) L1
      ELSE IF (ERRNR.EQ.36) THEN
      WRITE (ERRFIL, 36) L1
      ELSE IF (ERRNR.EQ.50) THEN
      WRITE (ERRFIL, 50) L1
      ELSE IF (ERRNR.EQ.51) THEN
      WRITE (ERRFIL, 51) L1
      ELSE IF (ERRNR.EQ.52) THEN
      WRITE (ERRFIL, 52) L1
      ELSE IF (ERRNR.EQ.53) THEN
      WRITE (ERRFIL, 53) L1
      ELSE IF (ERRNR.EQ.54) THEN
      WRITE (ERRFIL, 54) L1
      ELSE IF (ERRNR.EQ.60) THEN
      WRITE (ERRFIL, 60) L1
      ELSE IF (ERRNR.EQ.63) THEN
      WRITE (ERRFIL, 63) L1
      ELSE IF (ERRNR.EQ.66) THEN
      WRITE (ERRFIL, 66) L1
      ELSE IF (ERRNR.EQ.69) THEN
      WRITE (ERRFIL, 69) L1
      ELSE IF (ERRNR.EQ.72) THEN
      WRITE (ERRFIL, 72) L1
      ELSE IF (ERRNR.EQ.75) THEN
      WRITE (ERRFIL, 75) L1
      ELSE IF (ERRNR.EQ.77) THEN
      WRITE (ERRFIL, 77) L1
      ELSE IF (ERRNR.EQ.78) THEN
      WRITE (ERRFIL, 78) L1
      ELSE IF (ERRNR.EQ.79) THEN
      WRITE (ERRFIL, 79) L1
      ELSE IF (ERRNR.EQ.80) THEN
      WRITE (ERRFIL, 80) L1
      ELSE IF (ERRNR.EQ.84) THEN
      WRITE (ERRFIL, 84) L1
      ELSE IF (ERRNR.EQ.87) THEN
      WRITE (ERRFIL, 87) L1
      ELSE IF (ERRNR.EQ.91) THEN
      WRITE (ERRFIL, 91) L1
      ELSE IF (ERRNR.EQ.92) THEN
      WRITE (ERRFIL, 92) L1
      ELSE IF (ERRNR.EQ.93) THEN
      WRITE (ERRFIL, 93) L1
      ELSE IF (ERRNR.EQ.96) THEN
      WRITE (ERRFIL, 96) L1
      ELSE IF (ERRNR.EQ.65) THEN
      WRITE (ERRFIL, 65) L1
      ELSE IF (ERRNR.EQ.100) THEN
      WRITE(ERRFIL, 100) L1
      ELSE IF (ERRNR.EQ.101) THEN
      WRITE(ERRFIL, 101) L1
      ELSE IF (ERRNR.EQ.102) THEN
      WRITE(ERRFIL, 102) L1
      ELSE IF (ERRNR.EQ.103) THEN
      WRITE(ERRFIL, 103) L1
      ELSE IF (ERRNR.EQ.104) THEN
      WRITE(ERRFIL, 104) L1
      ELSE IF (ERRNR.EQ.120) THEN
      WRITE(ERRFIL, 120) L1
      ELSE IF (ERRNR.EQ.121) THEN
      WRITE(ERRFIL, 121) L1
      ELSE IF (ERRNR.EQ.122) THEN
      WRITE(ERRFIL, 122) L1
      ELSE IF (ERRNR.EQ.124) THEN
      WRITE(ERRFIL, 124) L1
      ELSE IF (ERRNR.EQ.160) THEN
      WRITE(ERRFIL, 160) L1
      ELSE IF (ERRNR.EQ.161) THEN
      WRITE(ERRFIL, 161) L1
      ELSE IF (ERRNR.EQ.162) THEN
      WRITE(ERRFIL, 162) L1
      ELSE IF (ERRNR.EQ.163) THEN
      WRITE(ERRFIL, 163) L1
      ELSE IF (ERRNR.EQ.165) THEN
      WRITE(ERRFIL, 165) L1
      ELSE IF (ERRNR.EQ.166) THEN
      WRITE(ERRFIL, 166) L1
      ELSE IF (ERRNR.EQ.167) THEN
      WRITE(ERRFIL, 167) L1
      ELSE IF (ERRNR.EQ.180) THEN
      WRITE(ERRFIL, 180) L1
      ELSE IF (ERRNR.EQ.182) THEN
      WRITE(ERRFIL, 182) L1
      ELSE IF (ERRNR.EQ.168) THEN
      WRITE(ERRFIL, 168) L1
      ELSE IF (ERRNR.EQ.300) THEN
      WRITE(ERRFIL, 300) L1
      ELSE IF (ERRNR.EQ.302) THEN
      WRITE(ERRFIL, 302) L1
      ELSE IF (ERRNR.EQ.303) THEN
      WRITE(ERRFIL, 303) L1
      ELSE IF (ERRNR.EQ.304) THEN
      WRITE(ERRFIL, 304) L1
      ELSE IF (ERRNR.EQ.305) THEN
      WRITE(ERRFIL, 305) L1
      ELSE IF (ERRNR.EQ.306) THEN
      WRITE(ERRFIL, 306) L1
      ELSE IF (ERRNR.EQ.307) THEN
      WRITE(ERRFIL, 307) L1
      ELSE IF (ERRNR.EQ.308) THEN
      WRITE(ERRFIL, 308) L1
      ELSE IF (ERRNR.EQ.2000) THEN
      WRITE(ERRFIL, 2000) L1
      ELSE IF (ERRNR.EQ.2001) THEN
      WRITE(ERRFIL, 2001) L1
      ELSE IF (ERRNR.EQ.2002) THEN
      WRITE(ERRFIL, 2002) L1
      ELSE IF (ERRNR.EQ.2003) THEN
      WRITE(ERRFIL, 2003) L1
      ELSE IF (ERRNR.EQ.-101) THEN
      WRITE(ERRFIL, 922) L1
      ELSE IF (ERRNR.EQ.-102) THEN
      WRITE(ERRFIL, 925) L1
      ELSE IF (ERRNR.EQ.-103) THEN
      WRITE(ERRFIL, 926) L1
      ELSE IF (ERRNR.EQ.-104) THEN
      WRITE(ERRFIL, 927) L1
      ELSE IF (ERRNR.EQ.-105) THEN
      WRITE(ERRFIL, 928) L1
      ELSE IF (ERRNR.EQ.-106) THEN
      WRITE(ERRFIL, 929) L1
      ELSE IF (ERRNR.EQ.-107) THEN
      WRITE(ERRFIL, 930) L1
      ELSE IF (ERRNR.EQ.-108) THEN
      WRITE(ERRFIL, 931) L1,STR(1:60)
      ELSE
      WRITE(ERRFIL, 921) L1
      ENDIF
C
    1 FORMAT(A52/' --GKS NOT IN PROPER STATE: GKS SHALL BE IN STATE GKCL
     +')
    2 FORMAT(A52/' --GKS NOT IN PROPER STATE: GKS SHALL BE IN STATE GKOP
     +')
    3 FORMAT(A52/' --GKS NOT IN PROPER STATE: GKS SHALL BE IN STATE WSAC
     +')
    4 FORMAT(A52/' --GKS NOT IN PROPER STATE: GKS SHALL BE IN STATE SGOP
     +')
    5 FORMAT(A52/' --GKS NOT IN PROPER STATE: GKS SHALL BE EITHER IN THE
     + STATE WSAC OR IN THE STATE SGOP')
    6 FORMAT(A52/' --GKS NOT IN PROPER STATE: GKS SHALL BE EITHER IN THE
     + STATE WSOP OR IN THE THE STATE WSAC')
    7 FORMAT(A52/' --GKS NOT IN PROPER STATE: GKS SHALL BE IN ONE OF THE
     + STATES  WSOP, WSAC, OR SGOP')
    8 FORMAT(A52/' --GKS NOT IN PROPER STATE: GKS SHALL BE IN ONE OF THE
     + STATES GKOP, WSOP, WSAC, OR SGOP')
   20 FORMAT(A52/' --SPECIFIED WORKSTATION IDENTIFIER IS INVALID')
   21 FORMAT(A52/' --SPECIFIED CONNECTION IDENTIFIER IS INVALID')
   22 FORMAT(A52/' --SPECIFIED WORKSTATION TYPE IS INVALID')
   23 FORMAT(A52/' --SPECIFIED WORKSTATION TYPE DOES NOT EXIST')
   24 FORMAT(A52/' --SPECIFIED WORKSTATION IS OPEN')
   25 FORMAT(A52/' --SPECIFIED WORKSTATION IS NOT OPEN')
   26 FORMAT(A52/' --SPECIFIED WORKSTATION CANNOT BE OPENED')
   27 FORMAT(A52/' --WORKSTATION INDEPENDENT SEGMENT STORAGE IS NOT OPE
     +N')
   29 FORMAT(A52/' --SPECIFIED WORKSTATION IS ACTIVE')
   30 FORMAT(A52/' --SPECIFIED WORKSTATION IS NOT ACTIVE')
   32 FORMAT(A52/' --SPECIFIED WORKSTATION IS NOT OF CATEGORY MO')
   33 FORMAT(A52/' --SPECIFIED WORKSTATION IS OF CATEGORY MI')
   34 FORMAT(A52/' --SPECIFIED WORKSTATION IS NOT OF CATEGORY MI')
   35 FORMAT(A52/' --SPECIFIED WORKSTATION IS OF CATEGORY INPUT')
   36 FORMAT(A52/' --SPECIFIED WORKSTATION IS WORKSTATION INDEPENDENT
     +SEGMENT STORAGE')
   50 FORMAT(A52/' --TRANSFORMATION NUMBER IS INVALID')
   51 FORMAT(A52/' --RECTANGLE DEFINITION IS INVALID')
   52 FORMAT(A52/' --VIEWPORT IS NOT WITHIN THE NORMALIZED DEVICE COORDI
     +NATE UNIT SQUARE')
   53 FORMAT(A52/' --WORKSTATION WINDOW IS NOT WITHIN THE NORMALIZED DEV
     +ICE COORDINATE UNIT SQUARE')
   54 FORMAT(A52/' --WORKSTATION VIEWPORT IS NOT WITHIN THE DISPLAY SPAC
     +E')
   60 FORMAT(A52/' --POLYLINE INDEX IS INVALID')
   63 FORMAT(A52/' --LINETYPE IS LESS THAN OR EQUAL TO ZERO')
   66 FORMAT(A52/' --POLYMARKER INDEX IS INVALID')
   69 FORMAT(A52/' --MARKER TYPE IS LESS THAN OR EQUAL TO ZERO')
   72 FORMAT(A52/' --TEXT INDEX IS INVALID')
   75 FORMAT(A52/' --TEXT FONT IS EQUAL TO ZERO')
   77 FORMAT(A52/' --CHARACTER EXPANSION FACTOR IS LESS THAN OR EQUAL TO
     + ZERO')
   78 FORMAT(A52/' --CHARACTER HEIGHT IS LESS THAN OR EQUAL TO ZERO')
   79 FORMAT(A52/' --LENGTH OF CHARACTER UP VECTOR IS ZERO')
   80 FORMAT(A52/' --FILL AREA INDEX IS INVALID')
   84 FORMAT(A52/' --STYLE (PATTERN OR HATCH) INDEX IS LESS THAN OR EQUA
     +L TO ZERO')
   87 FORMAT(A52/' --PATTERN SIZE VALUE IS NOT POSITIVE')
   91 FORMAT(A52/' --DIMENSIONS OF COLOR ARRAY ARE INVALID')
   92 FORMAT(A52/' --COLOR INDEX IS LESS THAN ZERO')
   93 FORMAT(A52/' --COLOR INDEX IS INVALID')
   96 FORMAT(A52/' --COLOR IS OUTSIDE RANGE ZERO TO ONE INCLUSIVE')
   65 FORMAT(A52/' --LINEWIDTH SCALE FACTOR LESS THAN ZERO')
  100 FORMAT(A52/' --NUMBER OF POINTS IS INVALID')
  101 FORMAT(A52/' --INVALID CODE IN STRING')
  102 FORMAT(A52/' --GENERALIZED DRAWING PRIMITIVE IDENTIFIER IS INVALID
     +')
  103 FORMAT(A52/' --CONTENT OF GENERALIZED DRAWING PRIMITIVE DATA RECOR
     +D IS INVALID')
  104 FORMAT(A52/' --AT LEAST ONE ACTIVE WORKSTATION IS NOT ABLE TO GENE
     +RATE THE SPECIFIED GENERALIZED DRAWING PRIMITIVE')
  120 FORMAT(A52/' --SPECIFIED SEGMENT NAME IS INVALID')
  121 FORMAT(A52/' --SPECIFIED SEGMENT NAME IS ALREADY IN USE')
  122 FORMAT(A52/' --SPECIFIED SEGMENT DOES NOT EXIST')
  124 FORMAT(A52/' --SPECIFIED SEGMENT DOES NOT EXIST ON WORKSTATION IND
     +EPENDENT SEGMENT STORAGE')
  160 FORMAT(A52/' --ITEM TYPE IS NOT ALLOWED FOR USER ITEMS')
  161 FORMAT(A52/' --ITEM LENGTH IS INVALID')
  162 FORMAT(A52/' --NO ITEM IS LEFT IN GKS METAFILE INPUT')
  163 FORMAT(A52/' --METAFILE ITEM IS INVALID')
  165 FORMAT(A52/' --CONTENT OF ITEM DATA RECORD IS INVALID FOR THE SPEC
     +IFIED ITEM TYPE')
  166 FORMAT(A52/' --MAXIMUM ITEM DATA RECORD LENGTH IS INVALID')
  167 FORMAT(A52/' --USER ITEM CANNOT BE INTERPRETED')
  180 FORMAT(A52/' --SPECIFIED FUNCTION IS NOT SUPPORTED')
  182 FORMAT(A52/' --CONTENTS OF ESCAPE DATA RECORD ARE INVALID')
  168 FORMAT(A52/' --SPECIFIED FUNCTION IS NOT SUPPORTED IN THIS LEVEL O
     +F GKS')
  300 FORMAT(A52/' --STORAGE OVERFLOW HAS OCCURRED IN GKS')
  302 FORMAT(A52/' --INPUT/OUTPUT ERROR HAS OCCURRED WHILE READING')
  303 FORMAT(A52/' --INPUT/OUTPUT ERROR HAS OCCURRED WHILE WRITING')
  304 FORMAT(A52/' --INPUT/OUTPUT ERROR HAS OCCURRED WHILE SENDING DATA
     +TO A WORKSTATION')
  305 FORMAT(A52/' --INPUT/OUTPUT ERROR HAS OCCURRED WHILE RECEIVING DAT
     +A FROM A WORKSTATION')
  306 FORMAT(A52/' --INPUT/OUTPUT ERROR HAS OCCURRED DURING PROGRAM LIBR
     +ARY MANAGEMENT')
  307 FORMAT(A52/' --INPUT/OUTPUT ERROR HAS OCCURRED WHILE READING WORKS
     +TATION DESCRIPTION TABLE')
  308 FORMAT(A52/' --ARITHMETIC ERROR HAS OCCURRED')
 2000 FORMAT(A52/' --ENUMERATION TYPE OUT OF RANGE')
 2001 FORMAT(A52/' --OUTPUT PARAMETER SIZE INSUFFICIENT')
 2002 FORMAT(A52/' --LIST OR SET ELEMENT NOT AVAILABLE')
 2003 FORMAT(A52/' --INVALID DATA RECORD')
  921 FORMAT(A52/' --UNKNOWN ERROR CODE')
  922 FORMAT(A52/' --NO ADDITIONAL WORKSTATIONS MAY BE ACTIVATED')
  925 FORMAT(A52/' --GKS SYSTEM ERROR--IMPROPER CONTINUATION SEQUENCE')
  926 FORMAT(A52/' --THE NCAR GKS IMPLEMENTATION REQUIRES THAT THE METAF
     +ILE WORKSTATION BE OPEN BEFORE WISS IS OPENED')
  927 FORMAT(A52/' --THE NCAR GKS IMPLEMENTATION REQUIRES THAT WISS BE C
     +LOSED BEFORE THE METAFILE WORKSTATION IS CLOSED')
  928 FORMAT(A52/' --ERROR OPENING DISK FILE')
  929 FORMAT(A52/' --LOGICAL UNIT NUMBER FOR SEGMENT STORAGE CANNOT BE T
     +HE SAME AS THAT FOR METAFILE OUTPUT')
  930 FORMAT(A52/' --MAXIMUM NUMBER OF ERROR MESSAGES EXCEEDED')
  931 FORMAT(A52/' --ILLEGAL PLACEMENT OF CALL TO ASSIGN PICTURE NAME:',
     +          /'     ',A60)
C
      RETURN
      END
