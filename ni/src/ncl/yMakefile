#
#      $Id: yMakefile,v 1.111 2006-01-26 16:41:30 grubin Exp $
#
###########################################################################
#			   Copyright (C)  1993			 	  #
#	     University Corporation for Atmospheric Research		  #
#			   All Rights Reserved				  #
#									  #
###########################################################################
#
#	File:		yMakefile for NCL
#
#	Author:		Ethan Alpert
#				National Center for Atmospheric Research
#				POB 3000, Boulder, Colorado
#
#	Date:		$Date: 2006-01-26 16:41:30 $
#
#	Description:	
#
#	Usage:
#
#	Environment:
#
#	Files:
#
#
#	Options:

MYBIN		=	ncl
MYLIB		=	libncl
MYLIB_API	=	libnclapi
MYLIB_IO        =       libnio
YACC		=	nyacc
LEX			=	flex

#if defined(linux)
EXTRA_CCOPTIONS = -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE
#endif

#ifdef BuildHDFEOS
HDFEOS_DEFS = -DBuildHDFEOS
HDFEOS_SRCS = NclHDFEOS.c
HDFEOS_OBJS = NclHDFEOS.o
#else
#define HDFEOS_SRCS
#define HDFEOS_OBJS
#define HDFEOSLIB
#endif

#if !defined(BuildUdunits)
#endif

#if !defined(BuildV5D)
#define    V5DLIB
#endif

#if defined(BuildDODS)
#if defined(sun)
DODS_LIBS	= -lnc-dap -ldap -lcurl -lrx -lxml2 -lstdc\+\+ -lssl -lpthread -lnsl
CC_LD		= g\+\+ -R/opt/SUNWspro/lib -L/opt/SUNWspro/lib
CCOPTIONS	= $(EXTRA_CCOPTIONS)
#elif defined(AIX)
DODS_LIBS	= -lnc-dap -ldap -lcurl -lrx -lxml2 -lpthread -lssl -liconv
CC_LD		= xlC_r
#else
DODS_LIBS	= -lnc-dap -ldap -lcurl -lrx -lxml2 -lpthread -lssl
CC_LD		= g\+\+
#endif
NCDFLIBS	= $(DODS_LIBS)
#endif

#ifdef  HPUX
ARCH_LIBS	=	-lPW
HACKOBJS	=	hphack.o
#endif

#if !defined(CRAY) && !defined(HPUX) && !defined(IRIX) && !defined(IRIX64) && !defined(OSF1)
DYNAMIC_LIBS	=	-ldl
#endif

EXTRA_CDEFINES = $(OS1_DEF) $(MAJOR_DEF) $(HDFEOS_DEFS) $(UDUNITS_DEFS) $(V5D_DEFS)

API_DEFS	=	-DMAKEAPI

PROG_LIBS	=	$(NFPLIBS) $(HLULIBS) $(NCARGLIBS) $(NGMATHLIB)
DEPLIBS		=	$(DEPNFPLIBS) $(DEPHLULIBS) $(DEPNCARGLIBS) $(DEPNGMATHLIB)

EXTRA_CLDFLAGS = $(DEV_LIB_SEARCH) $(EXTRA_EXPORT_FLAGS)

#if defined(SUN)
# EXTRA_LIBS      =	$(NCDFLIBS) $(HDFEOSLIB) $(HDFLIB) $(UDUNITSLIB) $(V5DLIB) -lsphere3_dp -fast -xlic_lib=sunperf	-lnsl -lintl -lsocket -ldl -lw -lfui 
EXTRA_LIBS      =	$(NCDFLIBS) $(HDFEOSLIB) $(HDFLIB) $(UDUNITSLIB) $(V5DLIB) -lsphere3_dp -llapack -lblas	-lnsl -lintl -lsocket -ldl -lw
#elif defined(AIX)
EXTRA_LIBS      =	$(NCDFLIBS) $(HDFEOSLIB) $(HDFLIB) $(UDUNITSLIB) $(V5DLIB) -lsphere3_dp -llapack -lblas -lxlf90 -lxlopt
#elif (defined(IRIX) || defined(IRIX64))
EXTRA_LIBS      =	$(NCDFLIBS) $(HDFEOSLIB) $(HDFLIB) $(UDUNITSLIB) $(V5DLIB) -lsphere3_dp -llapack -lblas
#else
EXTRA_LIBS      =	$(NCDFLIBS) $(HDFEOSLIB) $(HDFLIB) $(UDUNITSLIB) $(V5DLIB) -lsphere3_dp -llapack -lblas
#endif

SYS_LIBS	=	$(XLIB) $(CTOFLIBS) -lm $(ARCH_LIBS) $(DYNAMIC_LIBS)

HDRS		=	$(GEN_HDRS) $(STATIC_HDRS) $(INSTALL_HDRS)

GEN_HDRS	=	NclTypeobj.h NclTypelogical.h \
			NclTypedouble.h NclTypefloat.h \
			NclTypeint.h NclTypelong.h \
			NclTypeshort.h NclTypestring.h \
			parser.h NclTypebyte.h NclTypechar.h TypeSupport.h \
			MathFuncs.h 

STATIC_HDRS	=	AttSupport.h DataSupport.h FileSupport.h Keywords.h \
			Machine.h NclAtt.h NclData.h \
			NclFile.h NclFileInterfaces.h NclHLUObj.h NclMdInc.h \
			NclMultiDValData.h NclMultiDValHLUObjData.h \
			OpsFuncs.h OpsList.h SrcTree.h Symbol.h VarSupport.h \
			NclFileVar.h NclHLUVar.h HLUSupport.h NclCoordVar.h \
			NclType.h \
			NclMultiDValnclfileData.h NclMultiDValHLUObjData.h \
			NclOneDValCoordData.h HLUFunctions.h \
			NclCallBacksI.h date.h NclGRIB.h date.h tables.h \
			editline.h editline_unix.h ListSupport.h NclList.h \
			NclMultiDVallistData.h NclTypelist.h \
			cptec_254_gtb.h dwd_002_gtb.h dwd_201_gtb.h \
			dwd_202_gtb.h dwd_203_gtb.h ecmwf_128_gtb.h \
			ecmwf_129_gtb.h ecmwf_130_gtb.h ecmwf_131_gtb.h \
			ecmwf_140_gtb.h ecmwf_150_gtb.h ecmwf_160_gtb.h \
			ecmwf_170_gtb.h ecmwf_180_gtb.h fnmoc_gtb.h \
			fsl0_gtb.h fsl1_gtb.h fsl2_gtb.h ncep_opn_gtb.h \
			ncep_reanal_gtb.h omb_gtb.h ecmwf_132_gtb.h \
			ecmwf_162_gtb.h ecmwf_200_gtb.h


INSTALL_HDRS	= defs.h HluClasses.h NclApi.h ApiRecords.h NclVar.h \
			NclBuiltIns.h NclDataDefs.h NclBuiltInSupport.h NclCallBacksI.h \
			NclFileInterfaces.h $(NIO_HDRS)

NIO_HDRS        =       nio.h

API_SRCS	=	NclApi.c scanapi.c parseapi.c 
EXE_SRCS	=	Ncl.c scanner.c parser.c io.c
IO_SRCS         =       nio.c nio_io.c Error.c NresDB.c Callbacks.c \
			Quarks.c cmpf.c Base.c \
			Convert.c hlu.c  \
			NclHLUStub.c resolve_path.c

APISRCS		=	$(API_SRCS) $(SRCS)
EXESRCS		=	$(EXE_SRCS) $(SRCS)
IOSRCS          =       $(IO_SRCS) $(GEN_TYPE_SRCS) $(STATIC_IO_SRCS) $(HDFEOS_SRCS)
ALLSRCS		=	$(EXE_SRCS) 
COMMON_SRCS       =       $(GEN_TYPE_SRCS)
SRCS		=	$(GEN_SRCS) $(STATIC_SRCS) $(STATIC_IO_SRCS) $(HDFEOS_SRCS)

GEN_SRCS        =       $(GEN_TYPE_SRCS) $(GEN_EXE_SRCS) $(GEN_API_SRCS) $(GEN_MATH_SRCS)


GEN_TYPE_SRCS	=	NclTypedouble.c NclTypefloat.c \
			NclTypeint.c NclTypelogical.c \
			NclTypelong.c NclTypeobj.c \
			NclTypeshort.c NclTypestring.c \
			NclTypebyte.c NclTypechar.c TypeSupport.c \
			NclMultiDValData.c 

GEN_EXE_SRCS  	=       scanner.c parser.c

GEN_API_SRCS    =       scanapi.c parseapi.c

GEN_MATH_SRCS   =       MathFuncs.c

STATIC_IO_SRCS  =       AddFileFormats.c AttSupport.c DataSupport.c \
			FileSupport.c Formats.c GetGrids.c \
			InitData.c Memory.c NclAtt.c NclCCM.c \
			NclCoordVar.c NclData.c NclFile.c NclFileVar.c \
			NclGRIB.c NclHDF.c NclMultiDValnclfileData.c \
			NclNetCdf.c NclOneDValCoordData.c NclType.c \
			NclTypelist.c NclVar.c VarSupport.c \
			ctoiee.c date.c 

STATIC_SRCS	=	AddBuiltIns.c AddHLUObjs.c \
			AddIntrinsics.c Execute.c \
			Machine.c OpsFuncs.c Printtoken.c SrcTree.c \
			Symbol.c Translate.c  \
			NclHLUVar.c HLUSupport.c \
			NclMultiDValHLUObjData.c \
			BuiltInSupport.c BuiltInFuncs.c \
			HLUFunctions.c yywrap.c craybin.c \
			complete.c editline.c sysunix.c ListSupport.c \
			NclList.c NclMultiDVallistData.c 


FIO_SRCS        =       llmap.f llmisc.f

FSRCS		=	QU2REG.f ncepcode.f

FEXE_IOSRCS     =       fortranio.f

GEN_TYPE_OBJS	=	NclTypedouble.o NclTypefloat.o \
			NclTypeint.o NclTypelogical.o \
			NclTypelong.o NclTypeobj.o \
			NclTypeshort.o NclTypestring.o \
			NclTypebyte.o NclTypechar.o TypeSupport.o \
			NclMultiDValData.o 

GEN_EXE_OBJS  	=       scanner.o parser.o

GEN_API_OBJS    =       scanapi.o parseapi.o

GEN_MATH_OBJS   =       MathFuncs.o

STATIC_IO_OBJS  =       AddFileFormats.o AttSupport.o DataSupport.o \
			FileSupport.o Formats.o GetGrids.o \
			InitData.o Memory.o NclAtt.o NclCCM.o \
			NclCoordVar.o NclData.o NclFile.o NclFileVar.o \
			NclGRIB.o NclHDF.o NclMultiDValnclfileData.o \
			NclNetCdf.o NclOneDValCoordData.o NclType.o \
			NclTypelist.o NclVar.o VarSupport.o \
			ctoiee.o date.o 

STATIC_OBJS	=	AddBuiltIns.o AddHLUObjs.o \
			AddIntrinsics.o Execute.o \
			Machine.o OpsFuncs.o Printtoken.o SrcTree.o \
			Symbol.o Translate.o  \
			NclHLUVar.o HLUSupport.o \
			NclMultiDValHLUObjData.o \
			BuiltInSupport.o BuiltInFuncs.o \
			HLUFunctions.o yywrap.o craybin.o \
			complete.o editline.o sysunix.o ListSupport.o \
			NclList.o NclMultiDVallistData.o 

IO_EXTRA_OBJS   =       nio.o nio_io.o Error.o NresDB.o Callbacks.o \
			Quarks.o cmpf.o Base.o \
			Convert.o hlu.o  \
			NclHLUStub.o resolve_path.o

FMAP_OBJS       =       llmap.o llmisc.o

FOBJS		=	QU2REG.o ncepcode.o

FIO_OBJS        =       fortranio.o

COMMON_OBJS	=	$(GEN_TYPE_OBJS) $(STATIC_IO_OBJS) $(FOBJS) $(HDFEOS_OBJS)

API_OBJS	=	NclApi.o ioapi.o NclHLUObjapi.o $(GEN_API_OBJS) $(GEN_MATH_OBJS) $(COMMON_OBJS) $(STATIC_OBJS) $(FIO_OBJS)
EXE_OBJS	=	Ncl.o io.o NclHLUObj.o $(GEN_EXE_OBJS) $(GEN_MATH_OBJS) $(COMMON_OBJS) $(STATIC_OBJS) $(FIO_OBJS)
IO_OBJS         =       $(IO_EXTRA_OBJS) $(COMMON_OBJS) $(FMAP_OBJS)

ALLOBJS		=	$(EXE_OBJS) 
APIOBJS		=	$(API_OBJS) 
EXEOBJS		=	$(EXE_OBJS) $(HACKOBJS)
IOOBJS          =       $(IO_OBJS)

LibraryTarget($(MYLIB),$(ALLOBJS))
LibraryTarget($(MYLIB_API),$(APIOBJS))
LibraryTarget($(MYLIB_IO),$(IOOBJS))
BuildSharedLibTarget(libNGncl,$(APIOBJS),1,0,$(NCDFLIBS) $(HDFEOSLIB) $(HDFLIB) $(UDUNITSLIB) $(V5DLIB) $(CTOFLIBS) -lm -lc)
CProgram($(MYBIN),$(EXEOBJS),$(DEPLIBS))
InstallTarget(MakeNcl,$(INSTALL_BIN),$(BINPATH))
BuildIncludes($(INSTALL_HDRS),ncarg/ncl,../..)
InstallTarget($(INSTALL_HDRS),$(INSTALL_INC),$(NCLINCPATH))

depend-local:: $(HDRS) $(SRCS)
DependTarget($(SRCS))

CleanFilesTarget(lex.yy.c y.tab.c y.tab.h)
CleanFilesTarget($(GEN_HDRS) $(GEN_SRCS))

#
# yacc and lex dependancies
#

ioapi.o : io.c
	$(CC) -c $(API_DEFS) $(CFLAGS) io.c -o ioapi.o

NclHLUObjapi.o : NclHLUObj.c
	$(CC) -c $(API_DEFS) $(CFLAGS) NclHLUObj.c -o NclHLUObjapi.o

scanapi.c: scanner.c
	$(CP) scanner.c scanapi.c

scanapi.o: scanapi.c
	$(CC) -c $(API_DEFS) $(CFLAGS) $<

parseapi.c: parser.c
	$(CP) parser.c parseapi.c

parseapi.o: parseapi.c
	$(CC) -c $(API_DEFS) $(CFLAGS) $<

##if	defined(SUN) && (MAJOR == 4)
#scanner.c:	lex.yy.c syms_lex.sh
#	$(SHELL) syms_lex.sh
#
#parser.h:	y.tab.h syms_tab_h.sh
#	$(SHELL) syms_tab_h.sh
#
#parser.c:	y.tab.c syms_tab_c.sh
#	$(SHELL) syms_tab_c.sh
##else
scanner.c:	lex.yy.c
	$(CP) lex.yy.c scanner.c

parser.h:	y.tab.h
	$(CP) y.tab.h parser.h

parser.c:	y.tab.c
	$(CP) y.tab.c parser.c
##endif

lex.yy.c: ncl.l
	$(LEX) ncl.l

y.tab.c y.tab.h: ncl.y 
	$(YACC) -d -t ncl.y

TypeSupport.h: TypeSupport.h.sed TypeSupportMatTemplate.h.sed TypeSupportOpTemplate.h.sed TypeSupportMonoOpTemplate.h.sed
	@$(SHELL) type_support_h.sh

TypeSupport.c: TypeSupport.c.sed TypeSupportMatTemplate.c.sed TypeSupportOpTemplate.c.sed TypeSupportMonoOpTemplate.c.sed
	@$(SHELL) type_support_c.sh

NclMultiDValData.c: NclMultiDValData.c.sed MultiDValOp.c.sed NclMultiDValData.h math_funcs.sh MatMulDValOp.c.sed
	@$(SHELL) multid_data_c.sh

MathFuncs.c: MathFuncs.c.sed MathFuncs.h.sed MathTemplate.c.sed MathTemplate.h.sed math_funcs.sh
	@$(SHELL) math_funcs.sh

MathFuncs.h: MathFuncs.c.sed MathFuncs.h.sed MathTemplate2.c.sed MathTemplate.c.sed MathTemplate.h.sed math_funcs.sh
	@$(SHELL) math_funcs.sh

#
# Data Object dependancies
#

#define	NclTypeRule_h(type)\
]\
NclType##type.h:	data_h.sh NclType.h.sed]\
	@$(SHELL) data_h.sh type]

#define NclTypeRule_c(type,xtra_dep)\
]\
NclType##type.c:	type##_data_c.sh op_funcs.sh NclType##type.c.specific xtra_dep]\
	@$(SHELL) type##_data_c.sh]

#define NclTypeRule(type,xtra_dep)\
NclTypeRule_h(type)\
NclTypeRule_c(type,xtra_dep)

NUM_OP_TMPL	=	TypeDivOpTemplate.c.sed \
			TypeFunctionOpTemplate.c.sed \
			TypeMatMulOpTemplate.c.sed \
			TypeIsMonoFunc.c.sed \
			TypeMonoOpTemplate.c.sed \
			TypeResetMissing.c.sed \
			TypeSelectOpTemplate.c.sed \
			TypeSimpleOpTemplate.c.sed \
			TypeXorOpTemplate.c.sed \
			TypeInitClassTemplate.c.sed \
			NclType.c.sed \
			NclType.h.sed

STR_OP_TMPL	=	TypestringCompareOpTemplate.c.sed \
			TypestringSelectOpTemplate.c.sed \
			TypeInitClassTemplate.c.sed \
			NclTypestring.c.sed

FILE_OP_TMPL	=	NclMultiDValData.c.sed MultiDValOp.c.sed 


NclTypeRule(double,$(NUM_OP_TMPL))
NclTypeRule(float,$(NUM_OP_TMPL))
NclTypeRule(int,$(NUM_OP_TMPL))
NclTypeRule(long,$(NUM_OP_TMPL))
NclTypeRule(short,$(NUM_OP_TMPL))
NclTypeRule(logical,$(NUM_OP_TMPL))
NclTypeRule(string,$(STR_OP_TMPL))
NclTypeRule(obj,$(NUM_OP_TMPL))
NclTypeRule(char,$(NUM_OP_TMPL))
NclTypeRule(byte,$(NUM_OP_TMPL))

#if defined(CRAY)
BuiltInFuncs.o:  BuiltInFuncs.c
	$(CC) -g $(CFLAGS) -c BuiltInFuncs.c
#endif

#
# Data Format Dependencies
#
 
NclHDF.o: NclHDF.c
      $(CC) -c $(HDFDEFINES) $(CFLAGS) NclHDF.c


MakeNcl: MakeNcl.csh Makefile
	@sed \
	-e 's+SED_CC_LD+$(CC_LD)+' \
	-e 's+SED_CC_OPT+$(CCOPTIONS)+' \
	-e 's+SED_LDLIBS+$(LDLIBS)+' \
	-e 's+SED_EXTRA_LDLIBS+$(EXTRA_LDLIBS)+' \
	-e 's+SED_LIBPATH+$(LIBPATH)+' \
	-e 's+SED_INCPATH+$(INCPATH)+' \
	<MakeNcl.csh > MakeNcl

