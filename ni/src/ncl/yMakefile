#
#      $Id: yMakefile,v 1.101 2004-12-23 18:42:53 haley Exp $
#
#########################################################################
#																		#
#			   Copyright (C)  1993										#
#	     University Corporation for Atmospheric Research				#
#			   All Rights Reserved										#
#																		#
#########################################################################
#
#	File:		yMakefile for NCL
#
#	Author:		Ethan Alpert
#				National Center for Atmospheric Research
#				POB 3000, Boulder, Colorado
#
#	Date:		$Date: 2004-12-23 18:42:53 $
#
#	Description:	
#
#	Usage:
#
#	Environment:
#
#	Files:
#
#
#	Options:

MYBIN		=	ncl
MYLIB		=	libncl
MYLIB_API	=	libnclapi
YACC		=	nyacc
LEX			=	flex

#if defined(linux)
EXTRA_CCOPTIONS = -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE
#endif

#ifdef BuildHDFEOS
HDFEOS_DEFS = -DBuildHDFEOS
HDFEOS_SRCS = NclHDFEOS.c
HDFEOS_OBJS = NclHDFEOS.o
#else
#define HDFEOS_SRCS
#define HDFEOS_OBJS
#define HDFEOSLIB
#endif

#if !defined(BuildUdunits)
#define UDUNITSLIB
#endif

#if !defined(BuildV5D)
#define    V5DLIB
#endif

#if defined(BuildDODS)
#if defined(sun)
DODS_LIBS	= -lnc-dods -ldap\+\+ -lcurl -lrx -lxml2 -lstdc\+\+ -lssl -lpthread -lnsl
CC_LD		= g\+\+ -R/opt/SUNWspro/lib -L/opt/SUNWspro/lib
CCOPTIONS	= $(EXTRA_CCOPTIONS)
#elif defined(AIX)
DODS_LIBS	= -lnc-dods -ldap\+\+ -lcurl -lrx -lxml2 -lpthread -lssl -liconv
CC_LD		= xlC_r
#else
DODS_LIBS	= -lnc-dods -ldap\+\+ -lcurl -lrx -lxml2 -lpthread -lssl
CC_LD		= g\+\+
#endif
NCDFLIBS	= $(DODS_LIBS)
#endif

#ifdef  HPUX
ARCH_LIBS	=	-lPW
HACKOBJS	=	hphack.o
EXTRA_CLDFLAGS	= 	-Wl,-E
#endif

#if defined(linux) || defined(i386)
EXTRA_CLDFLAGS	= -rdynamic
#endif

#if !defined(CRAY) && !defined(HPUX) && !defined(IRIX) && !defined(IRIX64) && !defined(OSF1)
DYNAMIC_LIBS	=	-ldl
#endif

EXTRA_CDEFINES = $(OS1_DEF) $(MAJOR_DEF) $(HDFEOS_DEFS) $(UDUNITS_DEFS) $(V5D_DEFS)

API_DEFS	=	-DMAKEAPI

PROG_LIBS	=	$(NFPLIB) $(HLULIBS) $(NCARGLIBS) $(NGMATHLIB)
DEPLIBS		=	$(DEPNFPLIB) $(DEPHLULIBS) $(DEPNCARGLIBS) $(DEPNGMATHLIB)

#if defined(SUN)
# EXTRA_LIBS      =	$(NCDFLIBS) $(HDFEOSLIB) $(HDFLIB) $(UDUNITSLIB) $(V5DLIB) -lsphere3_dp -fast -xlic_lib=sunperf 
EXTRA_LIBS      =	$(NCDFLIBS) $(HDFEOSLIB) $(HDFLIB) $(UDUNITSLIB) $(V5DLIB) -lsphere3_dp -llapack -lblas
#elif defined(AIX)
EXTRA_LIBS      =	$(NCDFLIBS) $(HDFEOSLIB) $(HDFLIB) $(UDUNITSLIB) $(V5DLIB) -lsphere3_dp -llapack -lblas -lxlf90 -lxlopt
EXTRA_CLDFLAGS	= -bexpall -brtl
#elif (defined(IRIX) || defined(IRIX64))
EXTRA_LIBS      =	$(NCDFLIBS) $(HDFEOSLIB) $(HDFLIB) $(UDUNITSLIB) $(V5DLIB) -lsphere3_dp -llapack -lblas
#else
EXTRA_LIBS      =	$(NCDFLIBS) $(HDFEOSLIB) $(HDFLIB) $(UDUNITSLIB) $(V5DLIB) -lsphere3_dp -llapack -lblas
#endif

SYS_LIBS	=	$(XLIB) $(CTOFLIBS) -lm $(ARCH_LIBS) $(DYNAMIC_LIBS)

HDRS		=	$(GEN_HDRS) $(STATIC_HDRS) $(INSTALL_HDRS)

GEN_HDRS	=	NclTypeobj.h NclTypelogical.h \
			NclTypedouble.h NclTypefloat.h \
			NclTypeint.h NclTypelong.h \
			NclTypeshort.h NclTypestring.h \
			parser.h NclTypebyte.h NclTypechar.h TypeSupport.h \
			MathFuncs.h 

STATIC_HDRS	=	AttSupport.h DataSupport.h FileSupport.h Keywords.h \
			Machine.h NclAtt.h NclData.h \
			NclFile.h NclFileInterfaces.h NclHLUObj.h NclMdInc.h \
			NclMultiDValData.h NclMultiDValHLUObjData.h \
			OpsFuncs.h OpsList.h SrcTree.h Symbol.h VarSupport.h \
			NclFileVar.h NclHLUVar.h HLUSupport.h NclCoordVar.h \
			NclType.h \
			NclMultiDValnclfileData.h NclMultiDValHLUObjData.h \
			NclOneDValCoordData.h BuiltInFuncs.h HLUFunctions.h \
			NclCallBacksI.h date.h NclGRIB.h date.h tables.h \
			editline.h unix.h ListSupport.h NclList.h \
			NclMultiDVallistData.h NclTypelist.h \
			cptec_254_gtb.h dwd_002_gtb.h dwd_201_gtb.h \
			dwd_202_gtb.h dwd_203_gtb.h ecmwf_128_gtb.h \
			ecmwf_129_gtb.h ecmwf_130_gtb.h ecmwf_131_gtb.h \
			ecmwf_140_gtb.h ecmwf_150_gtb.h ecmwf_160_gtb.h \
			ecmwf_170_gtb.h ecmwf_180_gtb.h fnmoc_gtb.h \
			fsl0_gtb.h fsl1_gtb.h fsl2_gtb.h ncep_opn_gtb.h \
			ncep_reanal_gtb.h omb_gtb.h ecmwf_132_gtb.h \
			ecmwf_162_gtb.h ecmwf_200_gtb.h


INSTALL_HDRS	= defs.h HluClasses.h NclApi.h ApiRecords.h NclVar.h \
			NclBuiltIns.h NclDataDefs.h NclBuiltInSupport.h NclCallBacksI.h \
			NclFileInterfaces.h 

API_SRCS	=	NclApi.c scanapi.c parseapi.c 
EXE_SRCS	=	Ncl.c scanner.c parser.c io.c

APISRCS		=	$(API_SRCS) $(SRCS)
EXESRCS		=	$(EXE_SRCS) $(SRCS)
ALLSRCS		=	$(EXESRCS)
SRCS		=	$(GEN_SRCS) $(STATIC_SRCS) $(HDFEOS_SRCS)

GEN_SRCS	=	NclTypedouble.c NclTypefloat.c \
			NclTypeint.c NclTypelogical.c \
			NclTypelong.c NclTypeobj.c \
			NclTypeshort.c NclTypestring.c \
			scanner.c parser.c NclTypebyte.c \
			NclTypechar.c scanapi.c parseapi.c TypeSupport.c \
			NclMultiDValData.c MathFuncs.c

STATIC_SRCS	=	AddBuiltIns.c AddFileFormats.c AddHLUObjs.c \
			AddIntrinsics.c AttSupport.c DataSupport.c Execute.c \
			FileSupport.c Formats.c InitData.c Machine.c Memory.c \
			NclAtt.c NclData.c NclFile.c NclHLUObj.c \
			NclType.c  \
			NclNetCdf.c NclVar.c OpsFuncs.c Printtoken.c SrcTree.c \
			Symbol.c Translate.c VarSupport.c NclFileVar.c \
			NclHLUVar.c HLUSupport.c NclCoordVar.c \
			NclMultiDValnclfileData.c NclMultiDValHLUObjData.c \
			NclOneDValCoordData.c BuiltInSupport.c BuiltInFuncs.c \
			HLUFunctions.c NclHDF.c NclGRIB.c date.c \
			yywrap.c GetGrids.c NclCCM.c craybin.c ctoiee.c \
			complete.c editline.c sysunix.c ListSupport.c \
			NclList.c NclMultiDVallistData.c NclTypelist.c

FSRCS		=	fortranio.f gaus.f QU2REG.f GDSWIZCB.f
FOBJS		=	fortranio.o gaus.o QU2REG.o GDSWIZCB.o

GEN_OBJS	=	NclTypedouble.o NclTypefloat.o \
			NclTypeint.o NclTypelogical.o \
			NclTypelong.o NclTypeobj.o \
			NclTypeshort.o NclTypestring.o \
			NclTypebyte.o NclTypechar.o NclMultiDValData.o \
			TypeSupport.o MathFuncs.o

STATIC_OBJS	=	AddBuiltIns.o AddFileFormats.o AddHLUObjs.o \
			AddIntrinsics.o AttSupport.o DataSupport.o Execute.o \
			FileSupport.o Formats.o InitData.o Machine.o Memory.o \
			NclAtt.o NclData.o NclFile.o \
			NclNetCdf.o NclVar.o OpsFuncs.o Printtoken.o SrcTree.o \
			Symbol.o Translate.o VarSupport.o NclFileVar.o \
			NclHLUVar.o HLUSupport.o NclCoordVar.o NclType.o \
			NclMultiDValnclfileData.o NclMultiDValHLUObjData.o \
			NclOneDValCoordData.o BuiltInSupport.o BuiltInFuncs.o \
			HLUFunctions.o NclHDF.o NclGRIB.o date.o \
			yywrap.o GetGrids.o NclCCM.o craybin.o ctoiee.o \
			complete.o editline.o sysunix.o ListSupport.o \
			NclList.o NclMultiDVallistData.o NclTypelist.o

OBJS		=	$(GEN_OBJS) $(STATIC_OBJS) $(FOBJS) $(HDFEOS_OBJS)

API_OBJS	=	NclApi.o scanapi.o parseapi.o ioapi.o NclHLUObjapi.o
EXE_OBJS	=	Ncl.o scanner.o parser.o io.o NclHLUObj.o

ALLOBJS		=	$(EXE_OBJS) $(OBJS)
APIOBJS		=	$(API_OBJS) $(OBJS)
EXEOBJS		=	$(EXE_OBJS) $(OBJS)  $(HACKOBJS)

LibraryTarget($(MYLIB),$(ALLOBJS))
LibraryTarget($(MYLIB_API),$(APIOBJS))
BuildSharedLibTarget(libNGncl,$(APIOBJS),1,0,$(NCDFLIBS) $(HDFEOSLIB) $(HDFLIB) $(UDUNITSLIB) $(V5DLIB) $(CTOFLIBS) -lm -lc)
CProgram($(MYBIN),$(EXEOBJS),$(DEPLIBS))
InstallTarget(MakeNcl,$(INSTALL_BIN),$(BINPATH))
BuildIncludes($(INSTALL_HDRS),ncarg/ncl,../..)
InstallTarget($(INSTALL_HDRS),$(INSTALL_INC),$(NCLINCPATH))

depend-local:: $(GEN_HDRS) $(GEN_SRCS)
DependTarget($(ALLSRCS))

CleanFilesTarget(lex.yy.c y.tab.c y.tab.h)
CleanFilesTarget($(GEN_HDRS) $(GEN_SRCS))

#
# yacc and lex dependancies
#

ioapi.o : io.c
	$(CC) -c $(API_DEFS) $(CFLAGS) io.c -o ioapi.o

NclHLUObjapi.o : NclHLUObj.c
	$(CC) -c $(API_DEFS) $(CFLAGS) NclHLUObj.c -o NclHLUObjapi.o

scanapi.c: scanner.c
	$(CP) scanner.c scanapi.c

scanapi.o: scanapi.c
	$(CC) -c $(API_DEFS) $(CFLAGS) $<

parseapi.c: parser.c
	$(CP) parser.c parseapi.c

parseapi.o: parseapi.c
	$(CC) -c $(API_DEFS) $(CFLAGS) $<

##if	defined(SUN) && (MAJOR == 4)
#scanner.c:	lex.yy.c syms_lex.sh
#	$(SHELL) syms_lex.sh
#
#parser.h:	y.tab.h syms_tab_h.sh
#	$(SHELL) syms_tab_h.sh
#
#parser.c:	y.tab.c syms_tab_c.sh
#	$(SHELL) syms_tab_c.sh
##else
scanner.c:	lex.yy.c
	$(CP) lex.yy.c scanner.c

parser.h:	y.tab.h
	$(CP) y.tab.h parser.h

parser.c:	y.tab.c
	$(CP) y.tab.c parser.c
##endif

lex.yy.c: ncl.l
	$(LEX) ncl.l

y.tab.c y.tab.h: ncl.y 
	$(YACC) -d -t ncl.y

TypeSupport.h: TypeSupport.h.sed TypeSupportMatTemplate.h.sed TypeSupportOpTemplate.h.sed TypeSupportMonoOpTemplate.h.sed
	@$(SHELL) type_support_h.sh

TypeSupport.c: TypeSupport.c.sed TypeSupportMatTemplate.c.sed TypeSupportOpTemplate.c.sed TypeSupportMonoOpTemplate.c.sed
	@$(SHELL) type_support_c.sh

NclMultiDValData.c: NclMultiDValData.c.sed MultiDValOp.c.sed NclMultiDValData.h math_funcs.sh MatMulDValOp.c.sed
	@$(SHELL) multid_data_c.sh

MathFuncs.c: MathFuncs.c.sed MathFuncs.h.sed MathTemplate.c.sed MathTemplate.h.sed math_funcs.sh
	@$(SHELL) math_funcs.sh

MathFuncs.h: MathFuncs.c.sed MathFuncs.h.sed MathTemplate2.c.sed MathTemplate.c.sed MathTemplate.h.sed math_funcs.sh
	@$(SHELL) math_funcs.sh

#
# Data Object dependancies
#

#define	NclTypeRule_h(type)\
]\
NclType##type.h:	data_h.sh NclType.h.sed]\
	@$(SHELL) data_h.sh type]

#define NclTypeRule_c(type,xtra_dep)\
]\
NclType##type.c:	type##_data_c.sh op_funcs.sh NclType##type.c.specific xtra_dep]\
	@$(SHELL) type##_data_c.sh]

#define NclTypeRule(type,xtra_dep)\
NclTypeRule_h(type)\
NclTypeRule_c(type,xtra_dep)

NUM_OP_TMPL	=	TypeDivOpTemplate.c.sed \
			TypeFunctionOpTemplate.c.sed \
			TypeMatMulOpTemplate.c.sed \
			TypeIsMonoFunc.c.sed \
			TypeMonoOpTemplate.c.sed \
			TypeResetMissing.c.sed \
			TypeSelectOpTemplate.c.sed \
			TypeSimpleOpTemplate.c.sed \
			TypeXorOpTemplate.c.sed \
			TypeInitClassTemplate.c.sed \
			NclType.c.sed \
			NclType.h.sed

STR_OP_TMPL	=	TypestringCompareOpTemplate.c.sed \
			TypestringSelectOpTemplate.c.sed \
			TypeInitClassTemplate.c.sed \
			NclTypestring.c.sed

FILE_OP_TMPL	=	NclMultiDValData.c.sed MultiDValOp.c.sed 


NclTypeRule(double,$(NUM_OP_TMPL))
NclTypeRule(float,$(NUM_OP_TMPL))
NclTypeRule(int,$(NUM_OP_TMPL))
NclTypeRule(long,$(NUM_OP_TMPL))
NclTypeRule(short,$(NUM_OP_TMPL))
NclTypeRule(logical,$(NUM_OP_TMPL))
NclTypeRule(string,$(STR_OP_TMPL))
NclTypeRule(obj,$(NUM_OP_TMPL))
NclTypeRule(char,$(NUM_OP_TMPL))
NclTypeRule(byte,$(NUM_OP_TMPL))

#if defined(CRAY)
BuiltInFuncs.o:  BuiltInFuncs.c
	$(CC) -g $(CFLAGS) -c BuiltInFuncs.c
#endif

#
# Data Format Dependencies
#
 
NclHDF.o: NclHDF.c
      $(CC) -c $(HDFDEFINES) $(CFLAGS) NclHDF.c


MakeNcl: MakeNcl.csh Makefile
	@sed \
	-e 's+SED_CC_LD+$(CC_LD)+' \
	-e 's+SED_CC_OPT+$(CCOPTIONS)+' \
	-e 's+SED_LDLIBS+$(LDLIBS)+' \
	-e 's+SED_EXTRA_LDLIBS+$(EXTRA_LDLIBS)+' \
	-e 's+SED_LIBPATH+$(LIBPATH)+' \
	-e 's+SED_INCPATH+$(INCPATH)+' \
	<MakeNcl.csh > MakeNcl

