#!/usr/local/bin/perl 
#
#      $Id: make-tape,v 1.2 1993-03-05 20:20:56 clyne Exp $
#
#########################################################################
#									#
#			   Copyright (C)  1992				#
#	     University Corporation for Atmospheric Research		#
#			   All Rights Reserved				#
#									#
#########################################################################
#
#	File:		make-tape
#
#	Author:		John Clyne
#			National Center for Atmospheric Research
#			PO 3000, Boulder, Colorado
#
#	Date:		Wed Dec 9 15:46:42 MST 1992
#
#	Description:	Write an NCAR G binary distribution tape.
#
#	Usage:		make-tape 	[-debug] 
#					[-root <directory>]
#					[-inter] 
#					[-nrdevice <device>] 
#					[-rhost <rhost>] 
#					[-<arch>]
#
#	Environment:
#
#	Files:		
#		$build_root		: root of ncarg build directory 
#					(currently /ncargbin)
#		$build_root/TOC		: table of contents describing what
#				  	should be put on the tape.
#		$build_root/INSTALL/install.tar	: install script
#
#		$build_root/$arch/{bin,inc,lib,man}.tar	: distribution tar files
#
#
#	Options:	-debug			: print tape writing commands 
#						  and exit.
#			-root <directory>	: root of ncarg build directory
#						  default is /ncargbin
#			-inter			: interactive mode - prompt 
#						  for platforms
#			-nrdevice <device>	: no rewind tape device
#			-rhost <rhost>		: remote host 
#			-arch <arch>		: platforms to include.
#
#	globals
#
$doDebug = 0;
@Archs = (
	'HPUX_HP9000_7xx',
	'AIX_RS6000',
	'SunOS_sun4',
	'SunOS_sun3',
	'Solaris_sun4',
	'ULTRIX_RISC',
	'IRIX_IP',
	'UNICOS_YMP'
);


#
#	execute a command via system(). If $doDebug is set just print the 
#	command
#
sub	my_system {
	local ($cmd) = @_;

	if ($doDebug) {
		print STDERR "$cmd\n";
	}
	else {
		system ($cmd);
		if ($? != 0) {
			print "\"$cmd\" exited with error\n";
			exit 1;
		}
	}
}

#
#	Rewind the tape. 
#
sub	rewind {
	local ($rsh, $device) = @_;
	local($cmd);

	if (defined ($rsh)) {
		$rsh = "$rsh -n";
	}

	$cmd = "$rsh mt -f $device rewind";
	do my_system ($cmd);
}

#
#	Append a file to tape. 
#
sub	write {
	local ($rsh, $nrdevice, $path, @files) = @_;

	local($cmd);

	foreach $file (@files) {
		
		$cmd = "cd $path; $rsh dd obs=10240 of=$nrdevice < $file";
		do my_system ($cmd);
	}

}



sub	get_archs {
	local($interactive) = @_;


	local($i, @select, @list);


	if (! $interactive) {
		return(@Archs);
	}

	$done = 0;
	while (! $done) {

	system ("clear");
	print "\n\n\nSelect the numbered item(s) from the following list\n";
	print "(Multiple item numbers should be separated by spaces): \n\n\n";


	for ($i=1; $i<=@Archs; $i++) {
		print "\t$i.  $Archs[$i - 1]\n";
	}
	print "\n\t$i.  All of the above\n";
	$all = $i;
	print "\n\t0.  Exit without writing tape\n";
	print "\n\n\n\tChoice(s) : ";

	$_ = <STDIN>;
	chop;

	@list = split(/ /,$_);
	undef @select;
	while (@list) {
		$_ = shift @list;
		if ($_ > $all  || $_ < 0) {
			print "Invalid selection <$_>\n";
		}
		elsif ($_ == 0) {
			print "Terminating \n";
			exit 1;
		}
		elsif ($_ == $all) {
			@select = @Archs;
		}
		else {
			@select = split(' ',join(' ',@select, $Archs[$_ - 1]));
		}
	}

	print "\n\nYou have selected the following systems:\n\n";

	@list = @select;	
	while (@list) {
		$_ = shift @list;
		print "\t$_\n";
	}
	print "\nIs this correct [y/n]? ";

	$_ = <STDIN>;
	chop;
	if ($_ eq "y" || $_ eq "Y") {
		$done = 1;
	}

	}

	return(@select);

}


##
##
##	M A I N
##
##


$nrdevice = "/dev/nrst8";	# no rewind tape device
$rhost = "windom";		# remote tapedrive host

$do_inter = 0;			# do interactive mode?
$build_root = "/ncargbin";	
$install_dir = "INSTALL";
$rsh;				# remote shell command (undefine if local)
@archs;				# architectures to write binaries for
$index = 0;			# index for toc
$usage = "[-debug] [-root <path>] [-inter] [-nrdevice <device>] [-rhost <rhost>] [-<arch>]";


#
# Tar files we write for each requested architecture
# N.B. order is important
#
@tars = ("bin.tar", "include.tar", "lib.tar", "man.tar");	



undef	@archs;
LOOP:
while ($ARGV[0] =~ /-/) {
        $_ = shift @ARGV;

        if (/-debug/) {
                $doDebug = 1;
        }
	elsif (/-i/) {
		$do_inter = 1;
	}
	elsif (/-rhost/) {
		$rhost = shift @ARGV;
	}
	elsif (/-nrdevice/) {
		$nrdevice = shift @ARGV;
	}
	elsif (/-root/) {
		$build_root = shift @ARGV;
	}
	else {
		foreach $arch (@Archs) {
			if (/-$arch/) {
				@archs = split(' ',join(' ',@archs,"$arch"));
				next LOOP;
			}
		}
		print STDERR "Usage: make-tape $usage\n";
		exit 1;
	}
}

$toc_file = "$build_root/INSTALL/var/TOC";

print "rhost=$rhost\n";
$rsh = "rsh $rhost" if (! ($rhost eq ""));

if (@ARGV) {
        print STDERR "Usage: $make-tape [-debug]\n";
        exit 1;
}

#
# if archs weren't specified on the command line get them now
#
if (! defined (@archs)) {
	@archs = &get_archs($do_inter);
}
print "archs=@archs\n";

#
# generate table of contents inside of install script directory. We need
# to do this before we tar up the directory.
#
open(FP, "> $toc_file") || die "Can't open file <$toc_file> : $!\n";

print FP "$index INSTALL\n";
$index++;

foreach $arch (@archs) {
	print FP "$index $arch\n";
	$index += @tars;
}
close(FP);

print "Place tape in device and hit <RETURN> when ready. Ctrl-C to abort ";
$_ = <STDIN>;

sleep 10;	# be safe - wait for tape to mount

#
#	generate the tar file with the install script
#
$cmd = "cd $build_root/$install_dir; tar -cfb ../install.tar 20 .";
do my_system("$cmd");

#
#	rewind the tape
#
do rewind($rsh, $nrdevice);



#
#	write the tar install script tar file
#
print "\n\nWriting install script to $rhost:$nrdevice...\n";
do write ($rsh, $nrdevice, "$build_root", "install.tar");
$index++;

	
chdir $build_root;
foreach $arch (@archs) {
	print "\n\nWriting $arch binaries to $rhost:$nrdevice...\n";
	do write ($rsh, $nrdevice, $arch, @tars);
}

#
#	rewind the tape
#
do rewind($rsh, $nrdevice);

exit 0;
